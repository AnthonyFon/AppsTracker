<ResourceDictionary x:Class="Task_Logger_Pro.Themes.StoppedLight"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Task_Logger_Pro.Controls"
                    xmlns:local="clr-namespace:Task_Logger_Pro"
                    xmlns:chart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart">

    <local:ConvertHeaderVisibility x:Key="convertHeaderVisibility" />
    <local:ConvertLabelVisibility    x:Key="convertLabelVisibility" />
    <local:ConvertDoubleToPercentage x:Key="convertDoubleToPercentage" />
    <local:ConvertValueToAlignment x:Key="convertValueToAlignment" />
    <local:ConvertScreenshotSize x:Key="convertScreenshotSize" />
    
    <Color x:Key="WindowBorderColor">#FFFF8C00</Color>
    <Color x:Key="LightAccentColor">#F7F7F7</Color>
    <Color x:Key="2ndBackgroundColor">#E0E0E0</Color>
    <SolidColorBrush x:Key="WindowBorderBrush"
                     Color="#EE7600" />
    <SolidColorBrush x:Key="ChildWindowBorderBrush"
                     Color="Purple" />
    <SolidColorBrush x:Key="LightAccent"
                     Color="#F7F7F7" />
    <SolidColorBrush x:Key="DarkAccent"
                     Color="#2B2B2B" />
    <LinearGradientBrush x:Key="WindowBackgroundBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0"
                         SpreadMethod="Reflect">
        <GradientStop Color="#EBEBEB"
                      Offset="0" />
        <GradientStop Color="#F5F5F5"
                      Offset="1" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="ChildWindowBackgroungBrush"
                     Color="#BABABA" />
    <SolidColorBrush x:Key="2ndBackgroundBrush"
                     Color="#E0E0E0" />
    <SolidColorBrush x:Key="WindowForegroundBrush"
                     Color="Gray" />
    <SolidColorBrush x:Key="LabelBrush"
                     Color="#454545" />
    <SolidColorBrush x:Key="HighlightBrush"
                     Color="Black" />
    <SolidColorBrush x:Key="BackgroundBrush"
                     Color="#EBEBEB" />

    <FontFamily x:Key="DefaultFontFamily">SegoeUI</FontFamily>

    <Style x:Key="MinimalChartStyle"
           TargetType="chart:ChartBase">

        <Setter Property="Background"
                Value="{DynamicResource 2ndBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource HighlightBrush}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="Margin"
                Value="5" />

    </Style>

    <Style x:Key="LabelStyle">
        <Setter Property="Control.FontFamily"
                Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="Control.FontSize"
                Value="13" />
        <Setter Property="Control.Foreground"
                Value="{DynamicResource LabelBrush }" />
        <Setter Property="Control.Height"
                Value="Auto" />
        <Setter Property="Control.Width"
                Value="Auto" />
        <Setter Property="Control.HorizontalAlignment"
                Value="Center" />
        <Setter Property="Control.VerticalAlignment"
                Value="Center" />
        <Setter Property="Control.HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="Control.VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Control.FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />
    </Style>

    <Style x:Key="SelectableLabelStyle"
           BasedOn="{StaticResource LabelStyle}"
           x:Name="selLblStyle">
        <Setter Property="Control.Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver"
                     Value="True">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SelectedLabelStyle"
           BasedOn="{StaticResource LabelStyle}"
           x:Name="selectedlLblStyle">
        <Setter Property="Control.Foreground"
                Value="{DynamicResource HighlightBrush}" />
    </Style>

    <Style x:Key="TrayLabelStyle"
           BasedOn="{StaticResource SelectableLabelStyle}"
           TargetType="Label">
        <Setter Property="Foreground"
                Value="Wheat" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver"
                     Value="True">
                <Setter Property="Control.Foreground"
                        Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="headerStyle"
           BasedOn="{StaticResource SelectableLabelStyle}">
        <Setter Property="Control.Foreground"
                Value="{DynamicResource LabelBrush}" />
    </Style>
    <Style x:Key="LBLabelStyle"
           x:Name="lbLblStyle"
           BasedOn="{StaticResource SelectableLabelStyle}">
        <Setter Property="Control.Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                               Value="True" />

                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsEnabled}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </MultiDataTrigger>
            <Trigger Property="Control.IsFocused"
                     Value="True ">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LBNavLabelStyle"
           BasedOn="{StaticResource SelectableLabelStyle}">
        <Setter Property="Control.Foreground"
                Value="{StaticResource WindowForegroundBrush}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                               Value="True" />

                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsEnabled}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </MultiDataTrigger>
            <Trigger Property="Control.IsFocused"
                     Value="True ">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="LBLabelStyleNoSel"
           x:Name="lbLblStylenSl"
           BasedOn="{StaticResource LabelStyle}">
        <Setter Property="Control.Foreground"
                Value="{DynamicResource HighlightBrush}" />
    </Style>

    <Style TargetType="controls:FilterableListView">

        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource ListViewItemStyle}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.ScrollUnit"
                Value="Item" />
        <Setter Property="VirtualizingStackPanel.CacheLengthUnit"
                Value="Page" />
    </Style>

    <Style TargetType="controls:SortableListView">

        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource ListViewItemStyle}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="VirtualizingStackPanel.VirtualizationMode"
                Value="Recycling" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizing"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.IsVirtualizingWhenGrouping"
                Value="True" />
        <Setter Property="VirtualizingStackPanel.ScrollUnit"
                Value="Item" />
        <Setter Property="VirtualizingStackPanel.CacheLengthUnit"
                Value="Page" />
    </Style>

    <Style x:Key="BackBtnStyle"
           TargetType="UserControl">
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="UserControl.IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PressedBtnStyle"
           TargetType="UserControl">
        <Setter Property="Foreground"
                Value="{DynamicResource HighlightBrush}" />
    </Style>

    <Style x:Key="PathStyle">
        <Setter Property="Path.Fill"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="Path.IsMouseOver"
                     Value="True">
                <Setter Property="Path.Fill"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="WindowBase"
           TargetType="Window"
           x:Name="WndBase">
        <Setter Property="Background"
                Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource WindowBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform CenterX="0.5"
                                CenterY="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin"
                Value="0.5,0.5" />
        <Setter Property="AllowsTransparency"
                Value="True" />
    </Style>

    <Style x:Key="WindowStyle"
           BasedOn="{StaticResource WindowBase}"
           TargetType="Window"
           x:Name="WndaStyle">
        <Setter Property="WindowStyle"
                Value="None" />
        <Setter Property="RenderOptions.BitmapScalingMode"
                Value="LowQuality" />
        <Setter Property="RenderOptions.EdgeMode"
                Value="Unspecified" />
        <Setter Property="BorderThickness"
                Value="1" />
    </Style>

    <Style x:Key="ChildWindowStyle"
           BasedOn="{StaticResource WindowBase}"
           TargetType="Window">
        <Setter Property="BorderBrush"
                Value="{StaticResource ChildWindowBorderBrush}" />
        <Setter Property="Background"
                Value="{StaticResource ChildWindowBackgroungBrush}" />
        <Setter Property="WindowStyle"
                Value="None" />
    </Style>

    <Style x:Key="WindowStyleWithFade"
           BasedOn="{StaticResource WindowStyle}"
           TargetType="Window"
           x:Name="WndaStyleFade">
        <Setter Property="Background"
                Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="WindowStyle"
                Value="None" />
        <!--<Style.Triggers>
            <EventTrigger RoutedEvent="Window.Loaded">
                <BeginStoryboard>
                    <Storyboard Name="WindowFadeIn">
                        <DoubleAnimation Name="fadeIn"
                                         Storyboard.TargetProperty="Opacity"
                                         From="0.0"
                                         To="1.0"
                                         Duration="0:0:0.7"
                                         AutoReverse="False">
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="Window.Unloaded">
                <BeginStoryboard>
                    <Storyboard Name="WindowFadeOut">
                        <DoubleAnimation Name="fadeOut"
                                         Storyboard.TargetProperty="Opacity"
                                         From="1.0"
                                         To="0.0"
                                         Duration="0:0:0.7"
                                         AutoReverse="False">
                        </DoubleAnimation>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>-->
    </Style>

    <Style x:Key="BorderStyle"
           TargetType="Border">
        <Setter Property="CornerRadius"
                Value="0" />
        <!--Setter Property="BorderBrush"
                Value="{DynamicResource WindowBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Background"
                Value="{DynamicResource 2ndBackgroundBrush}" /-->

    </Style>

    <Style x:Key="ThemeBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="Padding"
                Value="10" />
    </Style>

    <!--<Style TargetType="controls:FaderContentControl">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
    </Style>-->
    
    <Style x:Key="ListViewItemStyle"
           TargetType="ListViewItem">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsSelected"
                Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource 2ndBackgroundBrush}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <!--Trigger Property="IsMouseOver"
                     Value="True">
                
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger-->
        </Style.Triggers>
    </Style>
    <Style x:Key="GVLabelStyle"
           BasedOn="{StaticResource LabelStyle}"
           TargetType="Label">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                               Value="True" />

                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsEnabled}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GVBoldLabelStyle"
           BasedOn="{StaticResource LabelStyle}"
           TargetType="Label">
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="14" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                               Value="True" />

                    <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsEnabled}"
                               Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToolTipStyle"
           TargetType="ToolTip">
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource WindowBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <!--Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform CenterX="0.5"
                                CenterY="0.5" />
            </Setter.Value>
        </Setter>
        <Setter Property="RenderTransformOrigin"
                Value="0.5,0.5" /-->
    </Style>


    <Style x:Key="ListBoxItemStyle"
           TargetType="ListBoxItem">
        <Style.Resources>
            <!--SelectedItem with focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="{DynamicResource 2ndBackgroundColor}" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                             Color="White" />
            <!--SelectedItem without focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                             Color="{DynamicResource 2ndBackgroundColor}" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                             Color="{DynamicResource 2ndBackgroundColor}" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                             Color="White" />
        </Style.Resources>

    </Style>

    <Style x:Key="ListBoxItemStyleNoHL"
           TargetType="ListBoxItem">
        <Style.Resources>
            <!--SelectedItem with focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                             Color="WhiteSmoke" />
            <!--SelectedItem without focus-->
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                             Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                             Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                             Color="WhiteSmoke" />
        </Style.Resources>
        <Setter Property="IsSelected"
                Value="{Binding IsSelected}" />
    </Style>

    <Style x:Key="PopupStyle"
           TargetType="Popup">
        <Setter Property="PopupAnimation"
                Value="Slide" />
        <Setter Property="Placement"
                Value="Right" />
        <Setter Property="StaysOpen"
                Value="False" />
    </Style>

    <Style x:Key="TextboxStyle"
           TargetType="TextBox">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
    </Style>

    <Style x:Key="TextblockStyle"
           TargetType="TextBlock">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type GridViewColumnHeader}"
           x:Key="HeaderStyle">
        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />

                        </Grid.ColumnDefinitions>
                        <Label Style="{StaticResource headerStyle}"
                               Content="{TemplateBinding Content}"
                               Name="lblContent"
                               Grid.Column="0"
                               HorizontalAlignment="Center"
                               Margin="10,0,25,0" />
                        <Button  Name="lblFilter"
                                 Command="{x:Static controls:FilterableListView.ShowFilter}"
                                 Grid.Column="1"
                                 HorizontalAlignment="Left">
                            <Button.Template>
                                <ControlTemplate>
                                    <Label Style="{StaticResource headerStyle}"
                                           Content="6"
                                           FontFamily="Webdings"
                                           Visibility="{Binding ElementName=lblContent,Path=Content, Converter={StaticResource convertHeaderVisibility}, Mode=OneWay}" />
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <Thumb HorizontalAlignment="Right"
                               Grid.Column="2"
                               Name="PART_HeaderGripper"
                               Margin="0,4,0,4"
                               Width="2"
                               Background="{DynamicResource WindowBackgroundBrush}"
                               Visibility="{Binding ElementName=lblContent,Path=Content, Converter={StaticResource convertHeaderVisibility}, Mode=OneWay}" />

                        <Popup Style="{DynamicResource PopupStyle}"
                               StaysOpen="False"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=lblFilter}"
                               PopupAnimation="Slide">

                            <ListView x:Name="filterList"
                                      ItemsSource="{Binding}"
                                      Background="{DynamicResource 2ndBackgroundBrush}"
                                      BorderBrush="{DynamicResource WindowBorderBrush}"
                                      BorderThickness="1">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="SnapsToDevicePixels"
                                                Value="true" />
                                        <Setter Property="OverridesDefaultStyle"
                                                Value="true" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ListViewItem">
                                                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}"
                                                            Background="{TemplateBinding Background}"
                                                            Padding="{TemplateBinding Padding}"
                                                            SnapsToDevicePixels="true">
                                                        <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected"
                                                     Value="True">
                                                <Setter Property="Background"
                                                        Value="{DynamicResource WindowBorderBrush}" />
                                                <Setter Property="Foreground"
                                                        Value="{DynamicResource HighlightBrush}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.View>
                                    <GridView>
                                        <GridView.ColumnHeaderContainerStyle>
                                            <Style TargetType="GridViewColumnHeader">
                                                <Setter Property="Visibility"
                                                        Value="Collapsed" />
                                                <Setter Property="Height"
                                                        Value="0" />
                                            </Style>
                                        </GridView.ColumnHeaderContainerStyle>
                                        <GridViewColumn>

                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Label Style="{DynamicResource SelectableLabelStyle}"
                                                           Content="{Binding ItemView}" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView>
                                </ListView.View>
                            </ListView>
                        </Popup>

                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource WindowBorderBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}"
           x:Key="HeaderStyleWOFilter">
        <Setter Property="Background"
                Value="Transparent" />

        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />

                        </Grid.ColumnDefinitions>
                        <Label Style="{StaticResource headerStyle}"
                               Content="{TemplateBinding Content}"
                               Name="lblContent"
                               Grid.Column="0"
                               HorizontalAlignment="Center"
                               Margin="10,0,25,0" />

                        <Thumb HorizontalAlignment="Right"
                               Grid.Column="2"
                               Name="PART_HeaderGripper"
                               Margin="0,4,0,4"
                               Width="2"
                               Background="{DynamicResource WindowBackgroundBrush}"
                               Visibility="{Binding ElementName=lblContent,Path=Content, Converter={StaticResource convertHeaderVisibility}, Mode=OneWay}" />
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderButtonStyle"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle"
           TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Height"
                Value="15" />
        <Setter Property="Width"
                Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Stroke="{DynamicResource DarkAccent}"
                             StrokeThickness="1"
                             Name="Ellipse"
                             Fill="{DynamicResource WindowForegroundBrush}">
                        <!--Ellipse.Fill>
                            <RadialGradientBrush>
                                <GradientStop Color="#FF71B8CD"
                                              Offset="0" />
                                <GradientStop Color="#FF3A688F"
                                              Offset="1" />
                            </RadialGradientBrush>
                        </Ellipse.Fill-->
                    </Ellipse>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">

                            <Setter TargetName="Ellipse"
                                    Property="Fill"
                                    Value="{DynamicResource WindowBorderBrush}">

                                <!--Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF9F9F9"
                                                      Offset="0" />
                                        <GradientStop Color="#FF3A688F"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Setter.Value-->
                            </Setter>
                            <Setter TargetName="Ellipse"
                                    Property="StrokeThickness"
                                    Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalSliderStyle"
                     TargetType="{x:Type Slider}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto"
                                  MinWidth="{TemplateBinding Slider.MinWidth}" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TickBar Name="TopTick"
                     SnapsToDevicePixels="True"
                     Placement="Top"
                     Fill="Yellow"
                     Width="4"
                     Visibility="Collapsed" />
            <Border Name="TrackBackground"
                    Margin="0"
                    CornerRadius="8"
                    Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Width}"
                    Grid.Column="1"
                    Background="Transparent"
                    BorderBrush="{DynamicResource LabelBrush}"
                    BorderThickness="1" />
            <Track Grid.Column="1"
                   Name="PART_Track"
                   Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Width}">
                <Track.DecreaseRepeatButton>
                    <RepeatButton    Style="{DynamicResource SliderButtonStyle}"
                                     Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{DynamicResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton    Style="{DynamicResource SliderButtonStyle}"
                                     Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <Label Style="{DynamicResource LabelStyle}"
                   FontSize="9"
                   Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Value, Converter={StaticResource convertDoubleToPercentage}}"
                   Grid.Column="1"
                   Margin="20,-1,20,-1"
                   IsHitTestVisible="False"
                   HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Value, Converter={StaticResource convertValueToAlignment}}" />
            <TickBar Name="BottomTick"
                     SnapsToDevicePixels="True"
                     Grid.Column="2"
                     Fill="{TemplateBinding Foreground}"
                     Placement="Right"
                     Width="4"
                     Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="True">
                <Setter TargetName="TrackBackground"
                        Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter TargetName="TrackBackground"
                        Property="Background"
                        Value="{DynamicResource 2ndBackgroundBrush}" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter TargetName="TopTick"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="BottomTick"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SliderStyle"
           TargetType="Slider">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Template"
                Value="{DynamicResource VerticalSliderStyle}" />
    </Style>

    <Style TargetType="TextBlock"
           x:Key="ControlBoxStyle">
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Style.Triggers>
            <Trigger Property="Control.IsMouseOver"
                     Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Storyboard x:Key="imgScaleX+">
        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                         From="1.0"
                         To=" 1.1"
                         Duration="0:0:0.3" />
    </Storyboard>
    <Storyboard x:Key="imgScaleY+">
        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                         From="1.0"
                         To=" 1.1"
                         Duration="0:0:0.3" />
    </Storyboard>
    <Storyboard x:Key="imgScaleX-">
        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                         From="1.1"
                         To=" 1.0"
                         Duration="0:0:0.3" />
    </Storyboard>
    <Storyboard x:Key="imgScaleY-">
        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                         From="1.1"
                         To="1.0"
                         Duration="0:0:0.3" />
    </Storyboard>

    <!-- LISTBOTXITEM STYLE & TEMPLATE -->
    
    <Style x:Key="FlatListBoxItem"
           TargetType="ListBoxItem">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">

                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ScrollViewer Padding="{TemplateBinding Padding}"
                                  Focusable="false">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem"
           x:Key="ListBoxToolTipImageStyle">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="2"
                            Margin="5">
                        <Image Source="{Binding Path=Path}"
                               MaxHeight="400"
                               MaxWidth="635"
                               Stretch="Uniform">
                            <Image.RenderTransform>
                                <ScaleTransform />
                            </Image.RenderTransform>
                        </Image>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem"
           x:Key="ScreenshotViewerItemStyle">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="0"
                            Margin="5"
                            RenderTransformOrigin="0.5,0.5"
                            x:Name="border">
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource imgScaleX+}" />
                                <BeginStoryboard Storyboard="{StaticResource imgScaleY+}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource imgScaleX-}" />
                                <BeginStoryboard Storyboard="{StaticResource imgScaleY-}" />
                            </EventTrigger>
                        </Border.Triggers>

                        <Image Source="{Binding Path=Screensht}"
                               MaxHeight="80"
                               MaxWidth="140"
                               Stretch="Uniform"
                               RenderTransformOrigin="0.5,0.5">
                            <Image.RenderTransform>
                                <ScaleTransform />
                            </Image.RenderTransform>
                        </Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="border"
                                    Property="BitmapEffect">
                                <Setter.Value>
                                    <OuterGlowBitmapEffect GlowColor="Blue"
                                                           GlowSize="5" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <DataTrigger  Binding="{Binding
                                                RelativeSource={RelativeSource Self},
                                                Path=IsSelected}"
                                      Value="True">
                            <Setter Property="BorderThickness"
                                    Value="3"
                                    TargetName="border" />

                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="ListBoxItem"
           x:Key="ListBoxScreenshotAppStyle">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                  VerticalAlignment="Center" />
                        <Label Style="{StaticResource LabelStyle}"
                               Content="{Binding Name}"
                               VerticalAlignment="Center" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem"
           x:Key="ListBoxImageStyle">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="2"
                            Margin="5"
                            RenderTransformOrigin="0.5,0.5">
                        <Border.RenderTransform>
                            <ScaleTransform />
                        </Border.RenderTransform>
                        <Border.Triggers>
                            <EventTrigger RoutedEvent="Border.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource imgScaleX+}" />
                                <BeginStoryboard Storyboard="{StaticResource imgScaleY+}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Border.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource imgScaleX-}" />
                                <BeginStoryboard Storyboard="{StaticResource imgScaleY-}" />
                            </EventTrigger>
                        </Border.Triggers>
                        <ToggleButton x:Name="tbImage"
                                      Command="{Binding ShowHideCommand}"
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto">
                            <ToggleButton.Template>
                                <ControlTemplate>
                                    <Image Source="{Binding Path=Screensht}"
                                           MaxHeight="100"
                                           MaxWidth="175"
                                           Stretch="Uniform"
                                           RenderTransformOrigin="0.5,0.5">
                                        <Image.RenderTransform>
                                            <ScaleTransform />
                                        </Image.RenderTransform>
                                    </Image>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <Popup StaysOpen="False"
                                   Placement="Relative"
                                   PopupAnimation="Slide"
                                   IsOpen="{Binding IsOpen}"
                                   Name="popupImage">
                                <Border Background="{DynamicResource WindowBackgroundBrush}"
                                        BorderBrush="{DynamicResource WindowBorderBrush}"
                                        BorderThickness="1">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <DockPanel Margin="10,0,0,0"
                                                   Grid.Row="0">
                                            <Label Style="{StaticResource SelectedLabelStyle}"
                                                   Content="Date:"
                                                   DockPanel.Dock="Left" />
                                            <Label Style="{StaticResource SelectedLabelStyle}"
                                                   Content="{Binding Date}"
                                                   DockPanel.Dock="Left" />
                                            <Label Style="{StaticResource SelectedLabelStyle}"
                                                   Content="Size:"
                                                   DockPanel.Dock="Left" />
                                            <Label Style="{StaticResource SelectedLabelStyle}"
                                                   DockPanel.Dock="Left">
                                                <Label.Content>
                                                    <MultiBinding Converter="{StaticResource convertScreenshotSize}">
                                                        <Binding Path="Width" />
                                                        <Binding Path="Height" />
                                                    </MultiBinding>
                                                </Label.Content>
                                            </Label>
                                            <!--<Label Style="{StaticResource SelectedLabelStyle}"
                                                   Content="File Name:"
                                                   DockPanel.Dock="Left" />
                                            <Label Style="{StaticResource SelectedLabelStyle}"
                                                   Content="{Binding FileName}"
                                                   DockPanel.Dock="Left" />
                                            <Label Style="{StaticResource SelectedLabelStyle}"
                                                   Content="File Size:"
                                                   DockPanel.Dock="Left" />
                                            <Label Style="{StaticResource SelectedLabelStyle}"
                                                   Content="{Binding FileSize}"
                                                   DockPanel.Dock="Left" />-->
                                            <controls:closeBtn HorizontalAlignment="Right"
                                                               VerticalAlignment="Top"
                                                               Grid.Row="0"
                                                               DockPanel.Dock="Right">
                                                <controls:closeBtn.InputBindings>
                                                    <MouseBinding Gesture="LeftClick"
                                                                  Command="{Binding ShowHideCommand}" />
                                                </controls:closeBtn.InputBindings>
                                                <controls:closeBtn.LayoutTransform>
                                                    <ScaleTransform ScaleX="0.6"
                                                                    ScaleY="0.6" />
                                                </controls:closeBtn.LayoutTransform>
                                            </controls:closeBtn>
                                        </DockPanel>
                                        <Image  Stretch="Uniform"
                                                Source="{Binding Path=Screensht}"
                                                Grid.Row="1"
                                                Margin="10"
                                                Name="img"
                                                MaxHeight="{Binding PopupHeight}"
                                                MaxWidth="{Binding PopupWidth}" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </ToggleButton>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- COMBO BOX STYLE & TEMPLATE -->
    <ControlTemplate TargetType="ToggleButton"
                     x:Key="toggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="1"
                    Background="Transparent"
                    BorderBrush="{DynamicResource LabelBrush}"
                    BorderThickness="1"
                    TextBlock.Foreground="{DynamicResource HighlightBrush}" />

            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{DynamicResource LabelBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver"
                     Value="True">
                <!--Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource WindowBorderBrush}" /-->
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource 2ndBackgroundBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsFocused"
                     Value="True">
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="TextBox">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="Transparent" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}"
           TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Foreground"
                Value="{DynamicResource HighlightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Template="{StaticResource toggleButtonTemplate}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Foreground="{DynamicResource HighlightBrush}">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,13,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{DynamicResource ComboBoxTextBox}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="3,3,13,3"
                                 Focusable="True"
                                 Background="{DynamicResource 2ndBackgroundBrush}"
                                 Foreground="{DynamicResource HighlightBrush}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource WindowBackgroundBrush}"
                                        BorderThickness="1"
                                        CornerRadius="0"
                                        BorderBrush="{DynamicResource LabelBrush}" />
                                <ScrollViewer Margin="4,6,4,6"
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DarkAccent}" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                                 Property="Popup.AllowsTransparency"
                                 Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="0" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop"
                                    Value="false" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style            TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <Label Name="Content"
                               Content="{TemplateBinding Content}"
                               Style="{DynamicResource SelectableLabelStyle}"
                               Margin="0" />
                    </Border>
                    <!--ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Content"
                                    Value="{DynamicResource WindowBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!---CHECKBOX TEMPLATE-->

    <!--Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0"
                                   StrokeThickness="1"
                                   Stroke="#60000000"
                                   StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style-->

    <Style TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="17"
                                    Height="17"
                                    CornerRadius="0"
                                    Background="Transparent"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource LabelBrush}">
                                <Path Width="9"
                                      Height="9"
                                      Margin="2"
                                      Stretch="Fill"
                                      x:Name="CheckMark"
                                      SnapsToDevicePixels="False"
                                      Stroke="{DynamicResource DarkAccent}"
                                      Data="F1 M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z " />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentControl Margin="4,0,0,0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="false">
                            <Setter TargetName="CheckMark"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter TargetName="CheckMark"
                                    Property="Data"
                                    Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource 2ndBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource WindowBorderBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource DarkAccent}" />
                        </Trigger>
                        <!--Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="StandardBorderBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="StandardBackgroundBrush"
                     Color="#FFF" />
    <SolidColorBrush x:Key="HoverBorderBrush"
                     Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush"
                     Color="Transparent" />
    <SolidColorBrush x:Key="SelectedForegroundBrush"
                     Color="Transparent" />
    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="NormalBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush"
                     Color="Transparent" />
    <SolidColorBrush x:Key="HorizontalNormalBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush"
                     Color="#888" />
    <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
                         StartPoint="0,0"
                         EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White"
                              Offset="0.0" />
                <GradientStop Color="White"
                              Offset="0.6" />
                <GradientStop Color="#DDDDDD"
                              Offset="1.2" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF"
                              Offset="0.0" />
                <GradientStop Color="#CCC"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GlyphBrush"
                     Color="#444" />
    <LinearGradientBrush x:Key="PressedBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB"
                              Offset="0.0" />
                <GradientStop Color="#EEE"
                              Offset="0.1" />
                <GradientStop Color="#EEE"
                              Offset="0.9" />
                <GradientStop Color="#FFF"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- – SrollViewer ScrollBar Repeat Buttons (at each end) –-->
    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                            Margin="1"
                            CornerRadius="2"
                            Background="Transparent"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{StaticResource GlyphBrush}"
                              Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    CornerRadius="2"
                    Background="Transparent" />
            <RepeatButton Grid.Row="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="1,0,1,0"
                           Background="{StaticResource HorizontalNormalBrush}"
                           BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <!-- HorizontalScrollBar Template using the previously created Templates -->
    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="2"
                    Background="Transparent" />
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0,1,0,1"
                           Background="{StaticResource NormalBrush}"
                           BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    <!-- Style for overall  ScrollBar -->
    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Height"
                        Value="18" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="18" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  Style for overall  ScrollViewer -->
    <Style x:Key="FavsScrollViewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ScrollContentPresenter Grid.Column="1" />

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Foreground"
                Value="{DynamicResource HighlightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border Name="Border"
                            CornerRadius="4"
                            Background="{DynamicResource WindowBackgroundBrush}"
                            BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="1"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="10">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="{Binding Path=Caption}"></TextBlock>
                            <TextBlock>:</TextBlock>
                            <TextBlock Text="{Binding Path=Value}"></TextBlock>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="MinWidth"
                Value="75" />
        <!--Setter Property="FocusVisualStyle"
                Value="{x:Null}" /-->
        <Setter Property="Foreground"
                Value="{DynamicResource DarkAccent}" />
        <Setter Property="AllowDrop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Grid>
                        <Border Name="Border"
                                CornerRadius="1"
                                Background="Transparent"
                                BorderBrush="{DynamicResource LabelBrush}"
                                BorderThickness="1"
                                Margin="0">

                        </Border>
                        <ScrollViewer VerticalAlignment="Center"
                                      Margin="2,0,0,0"
                                      x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}"
                                    TargetName="Border" />
                            <Setter  TargetName="Border"
                                     Property="Background"
                                     Value="{DynamicResource 2ndBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}"
                                    TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style   TargetType="PasswordBox">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{DynamicResource DarkAccent}" />
        <Setter Property="PasswordChar"
                Value="●" />
        <Setter Property="AllowDrop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid>
                        <Border Name="Border"
                                CornerRadius="1"
                                Background="Transparent"
                                BorderBrush="{DynamicResource LabelBrush}"
                                BorderThickness="1">

                        </Border>
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      Margin="2,0,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}"
                                    TargetName="Border" />
                            <Setter  TargetName="Border"
                                     Property="Background"
                                     Value="{DynamicResource 2ndBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}"
                                    TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Storyboard x:Key="scrollIn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="0" />
            <SplineDoubleKeyFrame KeyTime="00:00:01.5"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="1200" />
            <EasingDoubleKeyFrame KeyTime="00:00:01.5"
                                  Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut" />
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="scrollOut">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="1" />
            <SplineDoubleKeyFrame KeyTime="00:00:01.5"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="0" />
            <SplineDoubleKeyFrame KeyTime="00:00:01.5"
                                  Value="-1200" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="fadeIn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="0" />
            <SplineDoubleKeyFrame KeyTime="00:00:01.6"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="150" />
            <EasingDoubleKeyFrame KeyTime="00:00:01.6"
                                  Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut" />
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="fadeOut">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="1" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="0" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                  Value="220" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="fadeInVertical">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="0" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.7"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="100" />
            <EasingDoubleKeyFrame KeyTime="00:00:00.7"
                                  Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut" />
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="fadeOutVertical">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="1" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.5"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="0" />
            <SplineDoubleKeyFrame KeyTime="00:00:00.5"
                                  Value="200" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style TargetType="controls:FaderContentControl">
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <!--<Setter Property="Visibility"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=UserControl}, Path=Visibility}" />-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:FaderContentControl">
                    <Grid x:Name="root"
                          RenderTransformOrigin="0.5,0.5">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="LayoutStates">
                                <VisualState x:Name="AfterLoaded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="120" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:01.5"
                                                                  Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AfterUnLoaded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.200"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.400"
                                                                  Value="120" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AfterLoadedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.2"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="150" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:01.5"
                                                                  Value="0">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut" />
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="AfterUnloadedVertical">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="1" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.200"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                       Storyboard.TargetName="root">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0" />
                                            <SplineDoubleKeyFrame KeyTime="00:00:01.400"
                                                                  Value="120" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Cursor="{TemplateBinding Cursor}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          x:Name="mainArea" />
                        <Rectangle x:Name="paintArea" />
                        <Grid.RenderTransform>
                            <TranslateTransform />
                        </Grid.RenderTransform>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="controls:FaderLabel">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:FaderLabel">
                    <Grid x:Name="mainContent">
                        <Grid.RenderTransform>
                            <TranslateTransform />
                        </Grid.RenderTransform>
                        <Label Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                               Style="{DynamicResource SelectableLabelStyle}">
                            <Label.RenderTransform>
                                <TranslateTransform />
                            </Label.RenderTransform>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="LayoutStates">
                                    <VisualState x:Name="AfterLoaded">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                           Storyboard.TargetName="mainContent">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                      Value="0" />
                                                <SplineDoubleKeyFrame KeyTime="00:00:01"
                                                                      Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                           Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                           Storyboard.TargetName="mainContent">
                                                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                      Value="570" />
                                                <EasingDoubleKeyFrame KeyTime="00:00:02.2"
                                                                      Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="AfterUnLoaded">

                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Label>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Style TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border BorderThickness="1"
                                CornerRadius="1"
                                BorderBrush="{DynamicResource WindowBorderBrush}"
                                Background="Transparent"
                                MinHeight="25"
                                MinWidth="50"
                                Name="Border">

                        </Border>
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style-->

    <Style TargetType="{x:Type Button}">

        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{DynamicResource DarkAccent}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="10,2,10,2" />
        <Setter Property="MinHeight"
                Value="25" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            TextBlock.Foreground="{DynamicResource DarkAccent}">
                        <ContentPresenter Name="Presenter"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextBlock.Foreground="{DynamicResource DarkAccent}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ButtonTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource 2ndBackgroundBrush}" />

                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DarkAccent}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource WindowBorderBrush}" />

                            <Setter Property="Foreground"
                                    Value="{DynamicResource LightAccent}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ButtonBackground"
                     Color="#333333" />
    <SolidColorBrush x:Key="ButtonBackgroundHover"
                     Color="#3e3e42" />
    <SolidColorBrush x:Key="ButtonBackgroundPressed"
                     Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="ButtonBorder"
                     Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}" />
    <SolidColorBrush x:Key="ButtonBorderHover"
                     Color="#3e3e42" />
    <SolidColorBrush x:Key="ButtonBorderPressed"
                     Color="{DynamicResource AccentColor}" />
    <SolidColorBrush x:Key="ButtonText"
                     Color="#d1d1d1" />
    <SolidColorBrush x:Key="ButtonTextHover"
                     Color="#d1d1d1" />
    <SolidColorBrush x:Key="ButtonTextPressed"
                     Color="#d1d1d1" />
    <SolidColorBrush x:Key="ButtonTextDisabled"
                     Color="#515151" />
    <Color x:Key="AccentColor">#1ba1e2</Color>

    <Style           TargetType="{x:Type ContextMenu}">
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />
        <Setter Property="Background"
                Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource WindowBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0,6,0,6" />
        <Setter Property="MinWidth"
                Value="150" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />

        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid Margin="4">
                        <Border Background="#0C000000"
                                BorderBrush="#0F000000"
                                BorderThickness="1"
                                CornerRadius="2.5"
                                Margin="-1" />
                        <Border Background="#0A000000"
                                BorderBrush="#0C000000"
                                BorderThickness="1"
                                CornerRadius="2.75"
                                Margin="-2" />

                        <Border x:Name="ContextMenuBorder"
                                Background="{DynamicResource 2ndBackgroundBrush}"
                                BorderBrush="{DynamicResource WindowBorderBrush}"
                                BorderThickness="1"
                                Margin="0,-1,0,0">
                            <ScrollViewer Name="ContextMenuScrollViewer"
                                          VerticalScrollBarVisibility="Auto">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Height="0"
                                            Width="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                        <Rectangle Name="OpaqueRect"
                                                   Height="{Binding ElementName=ContextMenuBorder,Path=ActualHeight}"
                                                   Width="{Binding ElementName=ContextMenuBorder,Path=ActualWidth}"
                                                   Fill="{Binding ElementName=ContextMenuBorder,Path=Background}" />
                                    </Canvas>
                                    <ItemsPresenter Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="Checkmark">M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z</Geometry>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid SnapsToDevicePixels="true"
                          Margin="8,4,8,4">
                        <Rectangle Height="1"
                                   Margin="0"
                                   Fill="{DynamicResource LabelBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="10"
                          Height="10"
                          Stretch="Fill"
                          Fill="{DynamicResource LabelBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="0,2,8,2"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="0,2" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource LightAccent}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource DarkAccent}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource DarkAccent}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource ItemTextDisabled}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource ItemTextDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="10"
                          Height="10"
                          Stretch="Fill"
                          Fill="{DynamicResource LabelBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="0,2,8,2"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="RightArrow"
                      Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}" />
            </Grid>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid Margin="4"
                      Background="{DynamicResource BackgroundBrush}">
                    <Grid x:Name="Shdw">
                        <Border Background="#0C000000"
                                BorderBrush="#0F000000"
                                BorderThickness="1"
                                CornerRadius="2.5"
                                Margin="-1" />
                        <Border Background="#0A000000"
                                BorderBrush="#0C000000"
                                BorderThickness="1"
                                CornerRadius="2.75"
                                Margin="-2" />
                    </Grid>
                    <Border x:Name="SubMenuBorder"
                            Background="{DynamicResource BackgroundBrush}"
                            BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="1"
                            Margin="0,-1,0,0">
                        <ScrollViewer Name="SubMenuScrollViewer"
                                      CanContentScroll="true"
                                      Foreground="{DynamicResource LabelBrush}"
                                      VerticalScrollBarVisibility="Auto">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter Name="ItemsPresenter"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Grid.IsSharedSizeScope="true" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource 2ndBackgroundBrush}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource HighlightBrush}" />
                <Setter TargetName="RightArrow"
                        Property="Fill"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                <Setter TargetName="Shdw"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource DarkAccent}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource DarkAccent}" />
                <Setter TargetName="RightArrow"
                        Property="Fill"
                        Value="{DynamicResource DarkAccent}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,2" />
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,2" />
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="2,3,2,3" />
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
            </Trigger>
        </Style.Triggers>
    </Style>


    <Storyboard x:Key="ElementFadeIn">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(FrameworkElement.Opacity)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="0" />
            <SplineDoubleKeyFrame KeyTime="00:00:01"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TranslateTransform.Y)">
            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                  Value="100" />
            <EasingDoubleKeyFrame KeyTime="00:00:01"
                                  Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut" />
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Style TargetType="ProgressBar">
        <Setter Property="Foreground"
                Value="{DynamicResource WindowForegroundBrush}" />
        <Setter Property="Background"
                Value="{DynamicResource 2ndBackgroundBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <ContentControl HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch">
                        <ContentControl.Resources>
                            <ExponentialEase EasingMode="EaseOut"
                                             Exponent="1"
                                             x:Key="ProgressBarEaseOut" />
                            <ExponentialEase EasingMode="EaseOut"
                                             Exponent="1"
                                             x:Key="ProgressBarEaseIn" />
                        </ContentControl.Resources >
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever"
                                                Duration="00:00:04.4">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0"
                                                                       Storyboard.TargetProperty="X"
                                                                       Storyboard.TargetName="R1TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                  Value="0.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                  Value="33.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                  Value="66.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                  Value="100.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2"
                                                                       Storyboard.TargetProperty="X"
                                                                       Storyboard.TargetName="R2TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                  Value="0.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                  Value="33.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                  Value="66.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                  Value="100.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4"
                                                                       Storyboard.TargetProperty="X"
                                                                       Storyboard.TargetName="R3TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                  Value="0.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                  Value="33.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                  Value="66.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                  Value="100.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6"
                                                                       Storyboard.TargetProperty="X"
                                                                       Storyboard.TargetName="R4TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                  Value="0.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                  Value="33.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                  Value="66.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                  Value="100.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8"
                                                                       Storyboard.TargetProperty="X"
                                                                       Storyboard.TargetName="R5TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                  Value="0.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                  Value="33.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                  Value="66.1" />
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                  Value="100.1"
                                                                  EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0"
                                                                       Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="R1">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                    Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2"
                                                                       Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="R2">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                    Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4"
                                                                       Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="R3">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                    Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6"
                                                                       Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="R4">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                    Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8"
                                                                       Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="R5">
                                            <DiscreteDoubleKeyFrame KeyTime="0"
                                                                    Value="1" />
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                    Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Root">
                            <Border x:Name="PART_Track"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" />
                            <Grid x:Name="ProgressBarRootGrid">

                                <Grid x:Name="IndeterminateRoot"
                                      Visibility="Collapsed"
                                      ClipToBounds="True">

                                    <Grid HorizontalAlignment="Left">
                                        <Rectangle Fill="{TemplateBinding Foreground}"
                                                   Height="4"
                                                   IsHitTestVisible="False"
                                                   Width="4"
                                                   x:Name="R1"
                                                   Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R1TT" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}"
                                                   Height="4"
                                                   IsHitTestVisible="False"
                                                   Width="4"
                                                   x:Name="R2"
                                                   Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R2TT" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}"
                                                   Height="4"
                                                   IsHitTestVisible="False"
                                                   Width="4"
                                                   x:Name="R3"
                                                   Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R3TT" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}"
                                                   Height="4"
                                                   IsHitTestVisible="False"
                                                   Width="4"
                                                   x:Name="R4"
                                                   Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R4TT" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}"
                                                   Height="4"
                                                   IsHitTestVisible="False"
                                                   Width="4"
                                                   x:Name="R5"
                                                   Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R5TT" />
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="DeterminateRoot">
                                    <Border x:Name="PART_Indicator"
                                            Background="{TemplateBinding Foreground}"
                                            HorizontalAlignment="Left">



                                    </Border>
                                </Grid>
                                <Label Style="{StaticResource LabelStyle}"
                                       Content="{Binding Usage}"
                                       ContentStringFormat="P" />
                            </Grid>
                        </Grid>
                    </ContentControl>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation"
                                 Value="Vertical">
                            <Setter Property="LayoutTransform"
                                    TargetName="Root">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate"
                                 Value="true">
                            <Setter Property="Visibility"
                                    TargetName="IndeterminateRoot"
                                    Value="Visible" />
                            <Setter Property="Visibility"
                                    TargetName="DeterminateRoot"
                                    Value="Collapsed" />
                            <Setter Property="Background"
                                    TargetName="PART_Track"
                                    Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


</ResourceDictionary>
