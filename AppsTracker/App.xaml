<Application x:Class="AppsTracker.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:AppsTracker.Widgets"
             xmlns:local="clr-namespace:AppsTracker"
             xmlns:chart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart"
             xmlns:utils="clr-namespace:AppsTracker.Utils"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/RunningLight.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <local:ConvertTicksToTimespan x:Key="convertTicksToTimespan" />
            <local:ConvertDoubleToTimespan x:Key="convertDoubleToTimespan" />
            <local:ConvertLimitSpanToMaxSlider x:Key="convertLimitSpanToMaxSlider" />
            <local:ConvertAppLimitToTimeSpan x:Key="convertAppLimitToTimeSpan" />
            <local:LimitReachedActionToStringConverter x:Key="limitReachedActionToStringConverter" />

            <Style x:Key="MinimalChartStyle"
                   TargetType="chart:ChartBase">

                <Setter Property="Background"
                        Value="{DynamicResource 2ndBackgroundBrush}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
                <Setter Property="FontSize"
                        Value="12" />
                <Setter Property="Margin"
                        Value="5" />

            </Style>

            <Style x:Key="LabelStyle">
                <Setter Property="Control.FontFamily"
                        Value="{DynamicResource DefaultFontFamily}" />
                <Setter Property="Control.FontSize"
                        Value="13" />
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource LabelBrush }" />
                <Setter Property="Control.Height"
                        Value="Auto" />
                <Setter Property="Control.Width"
                        Value="Auto" />
                <Setter Property="Control.HorizontalAlignment"
                        Value="Center" />
                <Setter Property="Control.VerticalAlignment"
                        Value="Center" />
                <Setter Property="Control.HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="Control.VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Control.FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="TextOptions.TextFormattingMode"
                        Value="Display" />
            </Style>

            <Style x:Key="SelectableLabelStyle"
                   BasedOn="{StaticResource LabelStyle}"
                   x:Name="selLblStyle">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="Control.IsMouseOver"
                                       Value="True" />
                            <Condition Property="Control.IsEnabled"
                                       Value="True" />
                        </MultiTrigger.Conditions>
                        <MultiTrigger.Setters>
                            <Setter Property="Control.Foreground"
                                    Value="{DynamicResource HighlightBrush}" />
                        </MultiTrigger.Setters>
                    </MultiTrigger>
                    <Trigger Property="Control.IsEnabled"
                             Value="False">
                        <Setter Property="Control.Foreground"
                                Value="{DynamicResource ButtonTextDisabled}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="SelectedLabelStyle"
                   BasedOn="{StaticResource LabelStyle}"
                   x:Name="selectedlLblStyle">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Style>

            <Style x:Key="TrayLabelStyle"
                   BasedOn="{StaticResource SelectableLabelStyle}"
                   TargetType="Label">
                <Setter Property="Foreground"
                        Value="Wheat" />
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver"
                             Value="True">
                        <Setter Property="Control.Foreground"
                                Value="White" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="headerStyle"
                   BasedOn="{StaticResource SelectableLabelStyle}">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource LabelBrush}" />
            </Style>

            <Style x:Key="LBLabelStyle"
                   BasedOn="{StaticResource SelectableLabelStyle}">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource LabelBrush}" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                       Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsEnabled}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Control.Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </MultiDataTrigger>
                    <Trigger Property="Control.IsFocused"
                             Value="True ">
                        <Setter Property="Control.Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LBNavLabelStyle"
                   BasedOn="{StaticResource SelectableLabelStyle}">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsSelected}"
                                       Value="True" />

                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListBoxItem}}, Path=IsEnabled}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Control.Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </MultiDataTrigger>
                    <Trigger Property="Control.IsFocused"
                             Value="True ">
                        <Setter Property="Control.Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="LBLabelStyleNoSel"
                   x:Name="lbLblStylenSl"
                   BasedOn="{StaticResource LabelStyle}">
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Style>


            <Style x:Key="BackBtnStyle"
                   TargetType="UserControl">
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Style.Triggers>
                    <Trigger Property="UserControl.IsMouseOver"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PressedBtnStyle"
                   TargetType="UserControl">
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
            </Style>

            <Style x:Key="PathStyle">
                <Setter Property="Path.Fill"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Style.Triggers>
                    <Trigger Property="Path.IsMouseOver"
                             Value="True">
                        <Setter Property="Path.Fill"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="WindowBase"
                   TargetType="Window"
                   x:Name="WndBase">
                <Setter Property="Background"
                        Value="{DynamicResource WindowBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="WindowStyle"
                        Value="None" />
                <Setter Property="FontFamily"
                        Value="{DynamicResource DefaultFontFamily}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform CenterX="0.5"
                                        CenterY="0.5" />
                    </Setter.Value>
                </Setter>
                <Setter Property="RenderTransformOrigin"
                        Value="0.5,0.5" />
                <Setter Property="AllowsTransparency"
                        Value="True" />
            </Style>

            <Style x:Key="WindowStyle"
                   BasedOn="{StaticResource WindowBase}"
                   TargetType="Window"
                   x:Name="WndaStyle">
                <Setter Property="WindowStyle"
                        Value="None" />
                <Setter Property="RenderOptions.BitmapScalingMode"
                        Value="LowQuality" />
                <Setter Property="RenderOptions.EdgeMode"
                        Value="Unspecified" />
                <Setter Property="BorderThickness"
                        Value="1" />
            </Style>

            <Style x:Key="ChildWindowStyle"
                   BasedOn="{StaticResource WindowStyle}"
                   TargetType="Window">
                <Setter Property="BorderBrush"
                        Value="{DynamicResource ChildWindowBorderBrush}" />
                <Setter Property="Background"
                        Value="{DynamicResource ChildWindowBackgroungBrush}" />
                <Setter Property="WindowStyle"
                        Value="None" />
            </Style>

            <Style x:Key="WindowStyleWithFade"
                   BasedOn="{StaticResource WindowStyle}"
                   TargetType="Window"
                   x:Name="WndaStyleFade">
                <Setter Property="Background"
                        Value="{DynamicResource WindowBackgroundBrush}" />
                <Setter Property="WindowStyle"
                        Value="None" />

            </Style>

            <Style x:Key="BorderStyle"
                   TargetType="Border">
                <Setter Property="CornerRadius"
                        Value="0" />

            </Style>

            <Style x:Key="ListViewItemStyle"
                   TargetType="ListViewItem">
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsSelected"
                        Value="{Binding IsSelected, Mode=TwoWay}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}"
                                    SnapsToDevicePixels="true">
                                <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource 2ndBackgroundBrush}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TreeViewItemStyle"
                   TargetType="TreeViewItem">
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="False" />
                <Setter Property="IsSelected"
                        Value="{Binding IsSelected, Mode=TwoWay}" />

                <Style.Triggers>
                    <Trigger Property="IsSelected"
                             Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource 2ndBackgroundBrush}" />
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="GVLabelStyle"
                   BasedOn="{StaticResource LabelStyle}"
                   TargetType="Label">
                <Style.Triggers>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                       Value="True" />

                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsEnabled}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="GVBoldLabelStyle"
                   BasedOn="{StaticResource LabelStyle}"
                   TargetType="Label">
                <Setter Property="FontWeight"
                        Value="Bold" />
                <Setter Property="FontSize"
                        Value="14" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}, Path=IsMouseOver}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsSelected}"
                                       Value="True" />

                            <Condition Binding="{Binding RelativeSource={RelativeSource
            AncestorType={x:Type ListViewItem}}, Path=IsEnabled}"
                                       Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="ToolTipStyle"
                   TargetType="ToolTip">
                <Setter Property="Background"
                        Value="{DynamicResource BackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Padding"
                        Value="10" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />

            </Style>



            <Style x:Key="PopupStyle"
                   TargetType="Popup">
                <Setter Property="PopupAnimation"
                        Value="Slide" />
                <Setter Property="Placement"
                        Value="Right" />
                <Setter Property="StaysOpen"
                        Value="False" />
            </Style>

            <Style x:Key="TextboxStyle"
                   TargetType="TextBox">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderBrush"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
            </Style>

            <Style x:Key="TextblockStyle"
                   TargetType="TextBlock">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>



            <Style TargetType="{x:Type GridViewColumnHeader}"
                   x:Key="HeaderStyle">
                <Setter Property="Background"
                        Value="Transparent" />

                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />

                                </Grid.ColumnDefinitions>
                                <Label Style="{DynamicResource headerStyle}"
                                       Content="{TemplateBinding Content}"
                                       Name="lblContent"
                                       Grid.Column="0"
                                       HorizontalAlignment="Center"
                                       Margin="10,0,25,0" />
                                <Button  Name="lblFilter"
                                         Command="{x:Static controls:FilterableListView.ShowFilter}"
                                         Grid.Column="1"
                                         HorizontalAlignment="Left">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Label Style="{DynamicResource headerStyle}"
                                                   Content="6"
                                                   FontFamily="Webdings"
                                                   Visibility="{Binding ElementName=lblContent,Path=Content, Converter={StaticResource convertHeaderVisibility}, Mode=OneWay}" />
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Thumb HorizontalAlignment="Right"
                                       Grid.Column="2"
                                       Name="PART_HeaderGripper"
                                       Margin="0,4,0,4"
                                       Width="2"
                                       Background="{DynamicResource WindowBackgroundBrush}"
                                       Visibility="{Binding ElementName=lblContent,Path=Content, Converter={StaticResource convertHeaderVisibility}, Mode=OneWay}" />

                                <Popup Style="{DynamicResource PopupStyle}"
                                       StaysOpen="False"
                                       Placement="Bottom"
                                       PlacementTarget="{Binding ElementName=lblFilter}"
                                       PopupAnimation="Slide">

                                    <ListView x:Name="filterList"
                                              ItemsSource="{Binding}"
                                              Background="{DynamicResource 2ndBackgroundBrush}"
                                              BorderBrush="{DynamicResource WindowBorderBrush}"
                                              BorderThickness="1">
                                        <ListView.ItemContainerStyle>
                                            <Style TargetType="ListViewItem">
                                                <Setter Property="SnapsToDevicePixels"
                                                        Value="true" />
                                                <Setter Property="OverridesDefaultStyle"
                                                        Value="true" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ListViewItem">
                                                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    Background="{TemplateBinding Background}"
                                                                    Padding="{TemplateBinding Padding}"
                                                                    SnapsToDevicePixels="true">
                                                                <GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected"
                                                             Value="True">
                                                        <Setter Property="Background"
                                                                Value="{DynamicResource WindowBorderBrush}" />
                                                        <Setter Property="Foreground"
                                                                Value="{DynamicResource HighlightBrush}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ListView.ItemContainerStyle>
                                        <ListView.View>
                                            <GridView>
                                                <GridView.ColumnHeaderContainerStyle>
                                                    <Style TargetType="GridViewColumnHeader">
                                                        <Setter Property="Visibility"
                                                                Value="Collapsed" />
                                                        <Setter Property="Height"
                                                                Value="0" />
                                                    </Style>
                                                </GridView.ColumnHeaderContainerStyle>
                                                <GridViewColumn>

                                                    <GridViewColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Label Style="{DynamicResource SelectableLabelStyle}"
                                                                   Content="{Binding ItemView}" />
                                                        </DataTemplate>
                                                    </GridViewColumn.CellTemplate>
                                                </GridViewColumn>
                                            </GridView>
                                        </ListView.View>
                                    </ListView>
                                </Popup>

                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Background"
                                Value="{DynamicResource WindowBorderBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type GridViewColumnHeader}"
                   x:Key="HeaderStyleWOFilter">
                <Setter Property="Background"
                        Value="Transparent" />

                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />

                                </Grid.ColumnDefinitions>
                                <Label Style="{DynamicResource headerStyle}"
                                       Content="{TemplateBinding Content}"
                                       Name="lblContent"
                                       Grid.Column="0"
                                       HorizontalAlignment="Center"
                                       Margin="10,0,25,0" />

                                <Thumb HorizontalAlignment="Right"
                                       Grid.Column="2"
                                       Name="PART_HeaderGripper"
                                       Margin="0,4,0,4"
                                       Width="2"
                                       Background="{DynamicResource WindowBackgroundBrush}"
                                       Visibility="{Binding ElementName=lblContent,Path=Content, Converter={StaticResource convertHeaderVisibility}, Mode=OneWay}" />
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SliderButtonStyle"
                   TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels"
                        Value="true" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="SliderThumbStyle"
                   TargetType="{x:Type Thumb}">
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="Height"
                        Value="15" />
                <Setter Property="Width"
                        Value="15" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Ellipse Stroke="{DynamicResource DarkAccent}"
                                     StrokeThickness="1"
                                     Name="Ellipse"
                                     Fill="{DynamicResource WindowForegroundBrush}">
                                <!--Ellipse.Fill>
                            <RadialGradientBrush>
                                <GradientStop Color="#FF71B8CD"
                                              Offset="0" />
                                <GradientStop Color="#FF3A688F"
                                              Offset="1" />
                            </RadialGradientBrush>
                        </Ellipse.Fill-->
                            </Ellipse>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">

                                    <Setter TargetName="Ellipse"
                                            Property="Fill"
                                            Value="{DynamicResource WindowBorderBrush}">

                                        <!--Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Color="#FFF9F9F9"
                                                      Offset="0" />
                                        <GradientStop Color="#FF3A688F"
                                                      Offset="1" />
                                    </RadialGradientBrush>
                                </Setter.Value-->
                                    </Setter>
                                    <Setter TargetName="Ellipse"
                                            Property="StrokeThickness"
                                            Value="2" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalSliderStyle"
                             TargetType="{x:Type Slider}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto"
                                          MinWidth="{TemplateBinding Slider.MinWidth}" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TickBar Name="TopTick"
                             SnapsToDevicePixels="True"
                             Placement="Top"
                             Fill="Yellow"
                             Width="4"
                             Visibility="Collapsed" />
                    <Border Name="TrackBackground"
                            Margin="0"
                            CornerRadius="8"
                            Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Width}"
                            Grid.Column="1"
                            Background="Transparent"
                            BorderBrush="{DynamicResource LabelBrush}"
                            BorderThickness="1" />
                    <Track Grid.Column="1"
                           Name="PART_Track"
                           Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Width}">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton    Style="{DynamicResource SliderButtonStyle}"
                                             Command="Slider.DecreaseLarge" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{DynamicResource SliderThumbStyle}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton    Style="{DynamicResource SliderButtonStyle}"
                                             Command="Slider.IncreaseLarge" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <Label Style="{DynamicResource LabelStyle}"
                           FontSize="9"
                           Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Value, Converter={StaticResource convertDoubleToPercentage}}"
                           Grid.Column="1"
                           Margin="20,-1,20,-1"
                           IsHitTestVisible="False"
                           HorizontalAlignment="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Slider}, Path=Value, Converter={StaticResource convertValueToAlignment}}" />
                    <TickBar Name="BottomTick"
                             SnapsToDevicePixels="True"
                             Grid.Column="2"
                             Fill="{TemplateBinding Foreground}"
                             Placement="Right"
                             Width="4"
                             Visibility="Collapsed" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter TargetName="TrackBackground"
                                Property="BorderBrush"
                                Value="{DynamicResource WindowBorderBrush}" />
                        <Setter TargetName="TrackBackground"
                                Property="Background"
                                Value="{DynamicResource 2ndBackgroundBrush}" />
                    </Trigger>
                    <Trigger Property="TickPlacement"
                             Value="TopLeft">
                        <Setter TargetName="TopTick"
                                Property="Visibility"
                                Value="Visible" />
                    </Trigger>
                    <Trigger Property="TickPlacement"
                             Value="BottomRight">
                        <Setter TargetName="BottomTick"
                                Property="Visibility"
                                Value="Visible" />
                    </Trigger>
                    <Trigger Property="TickPlacement"
                             Value="Both">
                        <Setter TargetName="TopTick"
                                Property="Visibility"
                                Value="Visible" />
                        <Setter TargetName="BottomTick"
                                Property="Visibility"
                                Value="Visible" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="SliderStyle"
                   TargetType="Slider">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="Template"
                        Value="{DynamicResource VerticalSliderStyle}" />
            </Style>

            <Style TargetType="TextBlock"
                   x:Key="ControlBoxStyle">
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Style.Triggers>
                    <Trigger Property="Control.IsMouseOver"
                             Value="True">
                        <Setter Property="Foreground"
                                Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Storyboard x:Key="imgScaleX+">
                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                 From="1.0"
                                 To=" 1.1"
                                 Duration="0:0:0.3" />
            </Storyboard>
            <Storyboard x:Key="imgScaleY+">
                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                 From="1.0"
                                 To=" 1.1"
                                 Duration="0:0:0.3" />
            </Storyboard>
            <Storyboard x:Key="imgScaleX-">
                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                                 From="1.1"
                                 To=" 1.0"
                                 Duration="0:0:0.3" />
            </Storyboard>
            <Storyboard x:Key="imgScaleY-">
                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY"
                                 From="1.1"
                                 To="1.0"
                                 Duration="0:0:0.3" />
            </Storyboard>

            <!-- LISTBOTXITEM STYLE & TEMPLATE -->
            <Style x:Key="FlatListBoxItem"
                   TargetType="ListBoxItem">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Left" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Margin"
                        Value="0" />
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />


                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBox">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBox">
                            <ScrollViewer Padding="{TemplateBinding Padding}"
                                          Focusable="false">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBoxItem"
                   x:Key="ListBoxToolTipImageStyle">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderBrush="{DynamicResource WindowBorderBrush}"
                                    BorderThickness="2"
                                    Margin="5">
                                <Image Source="{Binding Path=Path}"
                                       MaxHeight="400"
                                       MaxWidth="635"
                                       Stretch="Uniform">
                                    <Image.RenderTransform>
                                        <ScaleTransform />
                                    </Image.RenderTransform>
                                </Image>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ListBoxItem"
                   x:Key="ScreenshotViewerItemStyle">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border BorderBrush="{DynamicResource ChildWindowBorderBrush}"
                                    BorderThickness="0"
                                    Margin="5"
                                    RenderTransformOrigin="0.5,0.5"
                                    x:Name="border">
                                <Border.RenderTransform>
                                    <ScaleTransform />
                                </Border.RenderTransform>
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Border.MouseEnter">
                                        <BeginStoryboard Storyboard="{StaticResource imgScaleX+}" />
                                        <BeginStoryboard Storyboard="{StaticResource imgScaleY+}" />
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Border.MouseLeave">
                                        <BeginStoryboard Storyboard="{StaticResource imgScaleX-}" />
                                        <BeginStoryboard Storyboard="{StaticResource imgScaleY-}" />
                                    </EventTrigger>
                                </Border.Triggers>

                                <Image Source="{Binding Path=Screensht}"
                                       MaxHeight="80"
                                       MaxWidth="140"
                                       Stretch="Uniform"
                                       RenderTransformOrigin="0.5,0.5">
                                    <Image.RenderTransform>
                                        <ScaleTransform />
                                    </Image.RenderTransform>
                                </Image>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected"
                                         Value="true">
                                    <Setter TargetName="border"
                                            Property="BitmapEffect">
                                        <Setter.Value>
                                            <OuterGlowBitmapEffect GlowColor="Blue"
                                                                   GlowSize="5" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <DataTrigger  Binding="{Binding
                                                RelativeSource={RelativeSource Self},
                                                Path=IsSelected}"
                                              Value="True">
                                    <Setter Property="BorderThickness"
                                            Value="3"
                                            TargetName="border" />

                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style TargetType="ListBoxItem"
                   x:Key="ListBoxScreenshotAppStyle">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <StackPanel Orientation="Horizontal">
                                <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay}"
                                          VerticalAlignment="Center" />
                                <Label Style="{DynamicResource LabelStyle}"
                                       Content="{Binding Name}"
                                       VerticalAlignment="Center" />
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Storyboard x:Key="BorderColorShow">
                <ColorAnimation     Storyboard.TargetProperty="BorderBrush.Color"
                                    From="Transparent"
                                    To="{DynamicResource WindowBorderColor}"
                                    Duration="0:0:0.35" />

            </Storyboard>
            <Storyboard x:Key="BorderColorHide">
                <ColorAnimation Storyboard.TargetProperty="BorderBrush.Color"
                                From="{DynamicResource WindowBorderColor}"
                                To="Transparent"
                                Duration="0:0:0.35" />

            </Storyboard>


            <Style TargetType="ListBoxItem"
                   x:Key="ListBoxImageStyle">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Border BorderBrush="Transparent"
                                    BorderThickness="2"
                                    Margin="5"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.Triggers>
                                    <EventTrigger RoutedEvent="Border.MouseEnter">
                                        <BeginStoryboard Storyboard="{DynamicResource BorderColorShow}" />
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Border.MouseLeave">
                                        <BeginStoryboard Storyboard="{DynamicResource BorderColorHide}" />
                                    </EventTrigger>
                                </Border.Triggers>
                                <ToggleButton x:Name="tbImage"
                                              Command="{Binding ShowHideCommand}"
                                              ScrollViewer.HorizontalScrollBarVisibility="Auto">
                                    <ToggleButton.Template>
                                        <ControlTemplate>
                                            <Grid>
                                                <Image Source="{Binding Path=Screensht}"
                                                       MaxHeight="100"
                                                       MaxWidth="175"
                                                       Stretch="Uniform"
                                                       RenderTransformOrigin="0.5,0.5">
                                                </Image>
                                                <CheckBox HorizontalAlignment="Left"
                                                          VerticalAlignment="Top"
                                                          Height="20"
                                                          Width="20"
                                                          IsChecked="{Binding IsSelected}"
                                                          Cursor="Arrow">
                                                </CheckBox>
                                            </Grid>
                                        </ControlTemplate>
                                    </ToggleButton.Template>
                                    <Popup StaysOpen="False"
                                           Placement="Relative"
                                           PopupAnimation="Slide"
                                           IsOpen="{Binding IsOpen}"
                                           Name="popupImage">
                                        <Border Background="{DynamicResource WindowBackgroundBrush}"
                                                BorderBrush="{DynamicResource WindowBorderBrush}"
                                                BorderThickness="1">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>

                                                <DockPanel Margin="10,0,0,0"
                                                           Grid.Row="0">
                                                    <Label Style="{DynamicResource SelectedLabelStyle}"
                                                           Content="Date:"
                                                           DockPanel.Dock="Left" />
                                                    <Label Style="{DynamicResource SelectedLabelStyle}"
                                                           Content="{Binding Date}"
                                                           DockPanel.Dock="Left" />
                                                    <Label Style="{DynamicResource SelectedLabelStyle}"
                                                           Content="Height:"
                                                           DockPanel.Dock="Left" />
                                                    <Label Style="{DynamicResource SelectedLabelStyle}"
                                                           Content="{Binding Height}"
                                                           DockPanel.Dock="Left" />
                                                    <Label Style="{DynamicResource SelectedLabelStyle}"
                                                           Content="Width:"
                                                           DockPanel.Dock="Left" />
                                                    <Label Style="{DynamicResource SelectedLabelStyle}"
                                                           Content="{Binding Width}"
                                                           DockPanel.Dock="Left" />
                                                    <controls:closeBtn HorizontalAlignment="Right"
                                                                       VerticalAlignment="Top"
                                                                       Grid.Row="0"
                                                                       DockPanel.Dock="Right">
                                                        <controls:closeBtn.InputBindings>
                                                            <MouseBinding Gesture="LeftClick"
                                                                          Command="{Binding ShowHideCommand}" />
                                                        </controls:closeBtn.InputBindings>
                                                        <controls:closeBtn.LayoutTransform>
                                                            <ScaleTransform ScaleX="0.6"
                                                                            ScaleY="0.6" />
                                                        </controls:closeBtn.LayoutTransform>
                                                    </controls:closeBtn>
                                                </DockPanel>
                                                <Image  Stretch="Uniform"
                                                        Source="{Binding Path=Screensht}"
                                                        Grid.Row="1"
                                                        Margin="10"
                                                        Name="img"
                                                        MaxHeight="{Binding PopupHeight}"
                                                        MaxWidth="{Binding PopupWidth}" />
                                            </Grid>
                                        </Border>
                                    </Popup>
                                </ToggleButton>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver"
                             Value="True">
                        <Setter Property="Cursor"
                                Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>


            <SolidColorBrush x:Key="StandardBorderBrush"
                             Color="#888" />
            <SolidColorBrush x:Key="StandardBackgroundBrush"
                             Color="#FFF" />
            <SolidColorBrush x:Key="HoverBorderBrush"
                             Color="#DDD" />
            <SolidColorBrush x:Key="SelectedBackgroundBrush"
                             Color="Transparent" />
            <SolidColorBrush x:Key="SelectedForegroundBrush"
                             Color="Transparent" />
            <SolidColorBrush x:Key="DisabledForegroundBrush"
                             Color="#888" />
            <SolidColorBrush x:Key="NormalBrush"
                             Color="#888" />
            <SolidColorBrush x:Key="NormalBorderBrush"
                             Color="Transparent" />
            <SolidColorBrush x:Key="HorizontalNormalBrush"
                             Color="#888" />
            <SolidColorBrush x:Key="HorizontalNormalBorderBrush"
                             Color="#888" />
            <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
                                 StartPoint="0,0"
                                 EndPoint="1,0.001">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="White"
                                      Offset="0.0" />
                        <GradientStop Color="White"
                                      Offset="0.6" />
                        <GradientStop Color="#DDDDDD"
                                      Offset="1.2" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="StandardBrush"
                                 StartPoint="0,0"
                                 EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#FFF"
                                      Offset="0.0" />
                        <GradientStop Color="#CCC"
                                      Offset="1.0" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="GlyphBrush"
                             Color="#444" />
            <LinearGradientBrush x:Key="PressedBrush"
                                 StartPoint="0,0"
                                 EndPoint="0,1">
                <GradientBrush.GradientStops>
                    <GradientStopCollection>
                        <GradientStop Color="#BBB"
                                      Offset="0.0" />
                        <GradientStop Color="#EEE"
                                      Offset="0.1" />
                        <GradientStop Color="#EEE"
                                      Offset="0.9" />
                        <GradientStop Color="#FFF"
                                      Offset="1.0" />
                    </GradientStopCollection>
                </GradientBrush.GradientStops>
            </LinearGradientBrush>

            <!-- – SrollViewer ScrollBar Repeat Buttons (at each end) –-->
            <Style x:Key="ScrollBarLineButton"
                   TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Name="Border"
                                    Margin="1"
                                    CornerRadius="2"
                                    Background="Transparent"
                                    BorderBrush="{DynamicResource NormalBorderBrush}"
                                    BorderThickness="1">
                                <Path HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Fill="{DynamicResource GlyphBrush}"
                                      Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter TargetName="Border"
                                            Property="Background"
                                            Value="{DynamicResource PressedBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource DisabledForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--  SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
            <Style x:Key="ScrollBarPageButton"
                   TargetType="{x:Type RepeatButton}">
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                            <Border Background="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
            <Style x:Key="ScrollBarThumb"
                   TargetType="{x:Type Thumb}">
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border CornerRadius="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="VerticalScrollBar"
                             TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="18" />
                        <RowDefinition Height="0.00001*" />
                        <RowDefinition MaxHeight="18" />
                    </Grid.RowDefinitions>
                    <Border Grid.RowSpan="3"
                            CornerRadius="2"
                            Background="Transparent" />
                    <RepeatButton Grid.Row="0"
                                  Style="{StaticResource ScrollBarLineButton}"
                                  Height="18"
                                  Command="ScrollBar.LineUpCommand"
                                  Content="M 0 4 L 8 4 L 4 0 Z" />
                    <Track Name="PART_Track"
                           Grid.Row="1"
                           IsDirectionReversed="true">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                          Command="ScrollBar.PageUpCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{DynamicResource ScrollBarThumb}"
                                   Margin="1,0,1,0"
                                   Background="{DynamicResource HorizontalNormalBrush}"
                                   BorderBrush="{DynamicResource HorizontalNormalBorderBrush}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                                          Command="ScrollBar.PageDownCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Row="3"
                                  Style="{DynamicResource ScrollBarLineButton}"
                                  Height="18"
                                  Command="ScrollBar.LineDownCommand"
                                  Content="M 0 0 L 4 4 L 8 0 Z" />
                </Grid>
            </ControlTemplate>
            <!-- HorizontalScrollBar Template using the previously created Templates -->
            <ControlTemplate x:Key="HorizontalScrollBar"
                             TargetType="{x:Type ScrollBar}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MaxWidth="18" />
                        <ColumnDefinition Width="0.00001*" />
                        <ColumnDefinition MaxWidth="18" />
                    </Grid.ColumnDefinitions>
                    <Border Grid.ColumnSpan="3"
                            CornerRadius="2"
                            Background="Transparent" />
                    <RepeatButton Grid.Column="0"
                                  Style="{DynamicResource ScrollBarLineButton}"
                                  Width="18"
                                  Command="ScrollBar.LineLeftCommand"
                                  Content="M 4 0 L 4 8 L 0 4 Z" />
                    <Track Name="PART_Track"
                           Grid.Column="1"
                           IsDirectionReversed="False">
                        <Track.DecreaseRepeatButton>
                            <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                                          Command="ScrollBar.PageLeftCommand" />
                        </Track.DecreaseRepeatButton>
                        <Track.Thumb>
                            <Thumb Style="{DynamicResource ScrollBarThumb}"
                                   Margin="0,1,0,1"
                                   Background="{DynamicResource NormalBrush}"
                                   BorderBrush="{DynamicResource NormalBorderBrush}" />
                        </Track.Thumb>
                        <Track.IncreaseRepeatButton>
                            <RepeatButton Style="{DynamicResource ScrollBarPageButton}"
                                          Command="ScrollBar.PageRightCommand" />
                        </Track.IncreaseRepeatButton>
                    </Track>
                    <RepeatButton Grid.Column="3"
                                  Style="{DynamicResource ScrollBarLineButton}"
                                  Width="18"
                                  Command="ScrollBar.LineRightCommand"
                                  Content="M 0 0 L 4 4 L 0 8 Z" />
                </Grid>
            </ControlTemplate>
            <!-- Style for overall  ScrollBar -->
            <Style x:Key="{x:Type ScrollBar}"
                   TargetType="{x:Type ScrollBar}">
                <Setter Property="SnapsToDevicePixels"
                        Value="True" />
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Style.Triggers>
                    <Trigger Property="Orientation"
                             Value="Horizontal">
                        <Setter Property="Width"
                                Value="Auto" />
                        <Setter Property="Height"
                                Value="18" />
                        <Setter Property="Template"
                                Value="{DynamicResource HorizontalScrollBar}" />
                    </Trigger>
                    <Trigger Property="Orientation"
                             Value="Vertical">
                        <Setter Property="Width"
                                Value="18" />
                        <Setter Property="Height"
                                Value="Auto" />
                        <Setter Property="Template"
                                Value="{DynamicResource VerticalScrollBar}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  Style for overall  ScrollViewer -->
            <Style x:Key="FavsScrollViewer"
                   TargetType="{x:Type ScrollViewer}">
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>

                                <ScrollContentPresenter Grid.Column="1" />

                                <ScrollBar Name="PART_VerticalScrollBar"
                                           Value="{TemplateBinding VerticalOffset}"
                                           Maximum="{TemplateBinding ScrollableHeight}"
                                           ViewportSize="{TemplateBinding ViewportHeight}"
                                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                                <ScrollBar Name="PART_HorizontalScrollBar"
                                           Orientation="Horizontal"
                                           Grid.Row="1"
                                           Grid.Column="1"
                                           Value="{TemplateBinding HorizontalOffset}"
                                           Maximum="{TemplateBinding ScrollableWidth}"
                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ToolTip">
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToolTip">
                            <Border Name="Border"
                                    CornerRadius="4"
                                    Background="{DynamicResource WindowBackgroundBrush}"
                                    BorderBrush="{DynamicResource WindowBorderBrush}"
                                    BorderThickness="1"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    Padding="10">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding Path=Caption}"></TextBlock>
                                    <TextBlock>:</TextBlock>
                                    <TextBlock Text="{Binding Path=Value}"></TextBlock>
                                </StackPanel>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Storyboard x:Key="scrollIn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.75"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="300" />
                    <EasingDoubleKeyFrame KeyTime="00:00:00.75"
                                          Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="scrollOut">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="1" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.75"
                                          Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.75"
                                          Value="-300" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="fadeIn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.35"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="50" />
                    <EasingDoubleKeyFrame KeyTime="00:00:00.30"
                                          Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="fadeOut">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="1" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.15"
                                          Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <!--<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                          Value="220" />
                </DoubleAnimationUsingKeyFrames>-->
            </Storyboard>


            <Storyboard x:Key="fadeInVertical">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.7"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="100" />
                    <EasingDoubleKeyFrame KeyTime="00:00:00.7"
                                          Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Storyboard x:Key="fadeOutVertical">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="1" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5"
                                          Value="0" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5"
                                          Value="200" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Style TargetType="controls:FaderContentControl">
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="VerticalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:FaderContentControl">
                            <Grid x:Name="root"
                                  RenderTransformOrigin="0.5,0.5">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="LayoutStates">
                                        <VisualState x:Name="AfterLoaded">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="0" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2"
                                                                          Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="120" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.3"
                                                                          Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut" />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="AfterUnLoaded">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="1" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                                                          Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="0" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.300"
                                                                          Value="120" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="AfterLoadedVertical">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="0" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:01.2"
                                                                          Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="150" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:01.5"
                                                                          Value="0">
                                                        <EasingDoubleKeyFrame.EasingFunction>
                                                            <CubicEase EasingMode="EaseOut" />
                                                        </EasingDoubleKeyFrame.EasingFunction>
                                                    </EasingDoubleKeyFrame>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="AfterUnloadedVertical">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="1" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:01.200"
                                                                          Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                               Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                               Storyboard.TargetName="root">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                          Value="0" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:01.400"
                                                                          Value="120" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter Cursor="{TemplateBinding Cursor}"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  Content="{TemplateBinding Content}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  x:Name="mainArea">
                                    <ContentPresenter.RenderTransform>
                                        <TranslateTransform />
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                                <Rectangle x:Name="paintArea">
                                    <Rectangle.RenderTransform>
                                        <TranslateTransform />
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <Grid.RenderTransform>
                                    <TranslateTransform />
                                </Grid.RenderTransform>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="controls:FaderLabel">

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:FaderLabel">
                            <Grid x:Name="mainContent">
                                <Grid.RenderTransform>
                                    <TranslateTransform />
                                </Grid.RenderTransform>
                                <Label Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Content}"
                                       Style="{DynamicResource SelectableLabelStyle}">
                                    <Label.RenderTransform>
                                        <TranslateTransform />
                                    </Label.RenderTransform>
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="LayoutStates">
                                            <VisualState x:Name="AfterLoaded">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="mainContent">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="0" />
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                                                                   Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                                                   Storyboard.TargetName="mainContent">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                              Value="70" />
                                                        <EasingDoubleKeyFrame KeyTime="00:00:00.2"
                                                                              Value="0">
                                                            <EasingDoubleKeyFrame.EasingFunction>
                                                                <CubicEase EasingMode="EaseOut" />
                                                            </EasingDoubleKeyFrame.EasingFunction>
                                                        </EasingDoubleKeyFrame>
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="AfterUnLoaded">

                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                </Label>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="controls:ModernButton">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Center" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Setter Property="Padding"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="controls:ModernButton">
                            <Grid x:Name="grid"
                                  Background="Transparent"
                                  Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>

                                <Grid Width="{TemplateBinding EllipseDiameter}"
                                      Height="{TemplateBinding EllipseDiameter}">
                                    <Ellipse x:Name="ellipse"
                                             Stroke="{DynamicResource WindowForegroundBrush}"
                                             StrokeThickness="{TemplateBinding EllipseStrokeThickness}"
                                             VerticalAlignment="Stretch" />
                                    <Path x:Name="icon"
                                          Data="{TemplateBinding IconData}"
                                          Width="{TemplateBinding IconWidth}"
                                          Height="{TemplateBinding IconHeight}"
                                          Fill="{TemplateBinding Foreground}"
                                          Stretch="Uniform"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                                </Grid>
                                <Grid Grid.Column="1">
                                    <TextBlock DataContext="{TemplateBinding Content}"
                                               TextTrimming="CharacterEllipsis"
                                               Foreground="{TemplateBinding Foreground}"
                                               Margin="4,-1,0,0"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource HighlightBrush}" />
                                    <Setter TargetName="ellipse"
                                            Property="Stroke"
                                            Value="{DynamicResource 2ndBackgroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsPressed"
                                         Value="True">
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                    <Setter TargetName="ellipse"
                                            Property="Stroke"
                                            Value="{DynamicResource WindowBorderBrush}" />
                                    <Setter TargetName="ellipse"
                                            Property="Fill"
                                            Value="{DynamicResource 2ndBackgroundBrush}" />
                                    <Setter TargetName="icon"
                                            Property="Fill"
                                            Value="{DynamicResource HighlightBrush}" />
                                </Trigger>

                                <Trigger Property="IsFocused"
                                         Value="true">
                                    <Setter TargetName="ellipse"
                                            Property="Stroke"
                                            Value="{DynamicResource HighlightBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DatePicker}">
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="IsTodayHighlighted"
                        Value="True" />
                <Setter Property="SelectedDateFormat"
                        Value="Short" />
                <Setter Property="Padding"
                        Value="2,2,2,1" />
                <Setter Property="HorizontalContentAlignment"
                        Value="Stretch" />
                <Setter Property="Focusable"
                        Value="False" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <Border x:Name="LayoutRoot"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}">
                                <Grid x:Name="PART_Root"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <controls:ModernButton x:Name="PART_Button"
                                                           Grid.Row="0"
                                                           Grid.Column="1"
                                                           Width="20"
                                                           Margin="3,0,3,0"
                                                           Padding="0"
                                                           Focusable="False"
                                                           VerticalAlignment="Top"
                                                           HorizontalAlignment="Left"
                                                           EllipseStrokeThickness="0"
                                                           IconWidth="12"
                                                           IconHeight="12"
                                                           IconData="F1 M 34.0047,52.0073L 31.0042,52.0073L 31.0042,38.5053C 29.6649,39.8964 28.157,40.7849 26.3412,41.4502L 26.3412,37.7553C 27.2998,37.4474 28.3405,36.8645 29.4634,36.0068C 30.5862,35.149 31.3572,34.1483 31.7762,33.0046L 34.0047,33.0046L 34.0047,52.0073 Z M 45.0063,52.0073L 45.0063,48.0067L 37.0052,48.0067L 37.0052,45.0063L 45.0063,33.0046L 48.0067,33.0046L 48.0067,45.0063L 50.007,45.0063L 50.007,48.0067L 48.0067,48.0067L 48.0067,52.0073L 45.0063,52.0073 Z M 45.0063,45.0063L 45.0063,38.2555L 40.2556,45.0063L 45.0063,45.0063 Z M 18.0025,57.0082L 18.0025,23.0033L 23.0032,23.0033L 23.0032,20.0029C 23.0033,18.898 23.8988,18.0026 25.0035,18.0026L 29.004,18.0026C 30.1087,18.0026 31.0042,18.898 31.0043,20.0026L 31.0043,23.0033L 45.0063,23.0033L 45.0062,20.0026C 45.0062,18.8979 45.9018,18.0023 47.0065,18.0023L 51.0071,18.0023C 52.1118,18.0023 53.0074,18.8979 53.0074,20.0026L 53.0074,23.0033L 58.0081,23.0033L 58.0081,57.0082L 18.0025,57.0082 Z M 21.0029,54.0078L 55.0076,54.0078L 55.0076,31.0044L 21.0029,31.0044L 21.0029,54.0078 Z M 48.5067,20.0029C 47.6782,20.0029 47.0065,20.6746 47.0065,21.5031L 47.0065,24.5035C 47.0065,25.3321 47.6782,26.0038 48.5067,26.0038L 49.5068,26.0038C 50.3354,26.0038 51.007,25.3321 51.007,24.5035L 51.007,21.5031C 51.007,20.6746 50.3354,20.0029 49.5068,20.0029L 48.5067,20.0029 Z M 26.5037,20.0029C 25.6751,20.0029 25.0035,20.6745 25.0035,21.5031L 25.0035,24.5035C 25.0035,25.3321 25.6751,26.0037 26.5037,26.0037L 27.5038,26.0037C 28.3324,26.0037 29.004,25.3321 29.004,24.5035L 29.004,21.5031C 29.004,20.6745 28.3324,20.0029 27.5038,20.0029L 26.5037,20.0029 Z" />

                                    <DatePickerTextBox x:Name="PART_TextBox"
                                                       Foreground="{TemplateBinding Foreground}"
                                                       HorizontalContentAlignment="Stretch"
                                                       VerticalContentAlignment="Center"
                                                       Focusable="{TemplateBinding Focusable}" />
                                    <Popup x:Name="PART_Popup"
                                           PlacementTarget="{Binding ElementName=LayoutRoot}"
                                           Placement="Bottom"
                                           HorizontalOffset="-4"
                                           VerticalOffset="-5"
                                           StaysOpen="False"
                                           AllowsTransparency="True" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>

                                <Trigger Property="IsFocused"
                                         Value="true">
                                    <Setter TargetName="LayoutRoot"
                                            Property="BorderBrush"
                                            Value="{DynamicResource HighlightBrush}" />
                                </Trigger>
                                <Trigger Property="IsKeyboardFocusWithin"
                                         Value="true">
                                    <Setter TargetName="LayoutRoot"
                                            Property="BorderBrush"
                                            Value="{DynamicResource HighlightBrush}" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled"
                                                   Value="True" />
                                        <Condition Property="IsMouseOver"
                                                   Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background"
                                            Value="{DynamicResource 2ndBackgroundBrush}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource WindowBorderBrush}" />
                                    <Setter Property="Foreground"
                                            Value="{DynamicResource HighlightBrush}" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type DatePickerTextBox}">
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Padding"
                        Value="1,0,0,0" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DatePickerTextBox">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="WatermarkStates">
                                        <VisualStateGroup.Transitions>
                                            <VisualTransition GeneratedDuration="0" />
                                        </VisualStateGroup.Transitions>
                                        <VisualState Name="Unwatermarked" />
                                        <VisualState Name="Watermarked">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="ContentElement"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0"
                                                                 Duration="0" />
                                                <DoubleAnimation Storyboard.TargetName="PART_Watermark"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1"
                                                                 Duration="0" />
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>

                                <Border x:Name="Border"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <Grid x:Name="WatermarkContent"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Border x:Name="ContentElement"
                                                BorderThickness="0"
                                                Opacity="1" />
                                        <Border x:Name="watermark_decorator"
                                                BorderThickness="0">
                                            <ContentControl x:Name="PART_Watermark"
                                                            Opacity="0"
                                                            Focusable="False"
                                                            IsHitTestVisible="False"
                                                            Margin="3,0" />
                                        </Border>
                                        <ScrollViewer x:Name="PART_ContentHost"
                                                      Margin="0"
                                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Grid>
                                </Border>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ChartLegendItemStyle">


            </Style>

            <Storyboard x:Key="ElementFadeIn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(FrameworkElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="0" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3"
                                          Value="1" />
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                               Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(TranslateTransform.X)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00"
                                          Value="30" />
                    <EasingDoubleKeyFrame KeyTime="00:00:00.3"
                                          Value="0">
                        <EasingDoubleKeyFrame.EasingFunction>
                            <CubicEase EasingMode="EaseOut" />
                        </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>

            <Style TargetType="ProgressBar">
                <Setter Property="Foreground"
                        Value="{DynamicResource WindowForegroundBrush}" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="BorderThickness"
                        Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <ContentControl HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch">
                                <ContentControl.Resources>
                                    <ExponentialEase EasingMode="EaseOut"
                                                     Exponent="1"
                                                     x:Key="ProgressBarEaseOut" />
                                    <ExponentialEase EasingMode="EaseOut"
                                                     Exponent="1"
                                                     x:Key="ProgressBarEaseIn" />
                                </ContentControl.Resources >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Determinate" />
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard RepeatBehavior="Forever"
                                                        Duration="00:00:04.4">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0"
                                                                               Storyboard.TargetProperty="X"
                                                                               Storyboard.TargetName="R1TT">
                                                    <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                          Value="0.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                          Value="33.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                                    <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                          Value="66.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                          Value="100.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2"
                                                                               Storyboard.TargetProperty="X"
                                                                               Storyboard.TargetName="R2TT">
                                                    <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                          Value="0.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                          Value="33.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                                    <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                          Value="66.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                          Value="100.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4"
                                                                               Storyboard.TargetProperty="X"
                                                                               Storyboard.TargetName="R3TT">
                                                    <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                          Value="0.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                          Value="33.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                                    <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                          Value="66.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                          Value="100.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6"
                                                                               Storyboard.TargetProperty="X"
                                                                               Storyboard.TargetName="R4TT">
                                                    <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                          Value="0.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                          Value="33.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                                    <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                          Value="66.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                          Value="100.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8"
                                                                               Storyboard.TargetProperty="X"
                                                                               Storyboard.TargetName="R5TT">
                                                    <LinearDoubleKeyFrame KeyTime="00:00:00.0"
                                                                          Value="0.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:00.5"
                                                                          Value="33.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseOut}" />
                                                    <LinearDoubleKeyFrame KeyTime="00:00:02.0"
                                                                          Value="66.1" />
                                                    <EasingDoubleKeyFrame KeyTime="00:00:02.5"
                                                                          Value="100.1"
                                                                          EasingFunction="{StaticResource ProgressBarEaseIn}" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0"
                                                                               Storyboard.TargetProperty="Opacity"
                                                                               Storyboard.TargetName="R1">
                                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                                            Value="1" />
                                                    <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                            Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2"
                                                                               Storyboard.TargetProperty="Opacity"
                                                                               Storyboard.TargetName="R2">
                                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                                            Value="1" />
                                                    <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                            Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4"
                                                                               Storyboard.TargetProperty="Opacity"
                                                                               Storyboard.TargetName="R3">
                                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                                            Value="1" />
                                                    <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                            Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6"
                                                                               Storyboard.TargetProperty="Opacity"
                                                                               Storyboard.TargetName="R4">
                                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                                            Value="1" />
                                                    <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                            Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8"
                                                                               Storyboard.TargetProperty="Opacity"
                                                                               Storyboard.TargetName="R5">
                                                    <DiscreteDoubleKeyFrame KeyTime="0"
                                                                            Value="1" />
                                                    <DiscreteDoubleKeyFrame KeyTime="00:00:02.5"
                                                                            Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="Root">
                                    <Border x:Name="PART_Track"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}" />
                                    <Grid x:Name="ProgressBarRootGrid">

                                        <Grid x:Name="IndeterminateRoot"
                                              Visibility="Collapsed"
                                              ClipToBounds="True">

                                            <Grid HorizontalAlignment="Left">
                                                <Rectangle Fill="{TemplateBinding Foreground}"
                                                           Height="4"
                                                           IsHitTestVisible="False"
                                                           Width="4"
                                                           x:Name="R1"
                                                           Opacity="0">
                                                    <Rectangle.RenderTransform>
                                                        <TranslateTransform x:Name="R1TT" />
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Fill="{TemplateBinding Foreground}"
                                                           Height="4"
                                                           IsHitTestVisible="False"
                                                           Width="4"
                                                           x:Name="R2"
                                                           Opacity="0">
                                                    <Rectangle.RenderTransform>
                                                        <TranslateTransform x:Name="R2TT" />
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Fill="{TemplateBinding Foreground}"
                                                           Height="4"
                                                           IsHitTestVisible="False"
                                                           Width="4"
                                                           x:Name="R3"
                                                           Opacity="0">
                                                    <Rectangle.RenderTransform>
                                                        <TranslateTransform x:Name="R3TT" />
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Fill="{TemplateBinding Foreground}"
                                                           Height="4"
                                                           IsHitTestVisible="False"
                                                           Width="4"
                                                           x:Name="R4"
                                                           Opacity="0">
                                                    <Rectangle.RenderTransform>
                                                        <TranslateTransform x:Name="R4TT" />
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                                <Rectangle Fill="{TemplateBinding Foreground}"
                                                           Height="4"
                                                           IsHitTestVisible="False"
                                                           Width="4"
                                                           x:Name="R5"
                                                           Opacity="0">
                                                    <Rectangle.RenderTransform>
                                                        <TranslateTransform x:Name="R5TT" />
                                                    </Rectangle.RenderTransform>
                                                </Rectangle>
                                            </Grid>
                                        </Grid>
                                        <Grid x:Name="DeterminateRoot">
                                            <Border x:Name="PART_Indicator"
                                                    Background="{TemplateBinding Foreground}"
                                                    HorizontalAlignment="Left">
                                            </Border>
                                        </Grid>
                                        <Label Style="{DynamicResource LabelStyle}"
                                               Content="{Binding Usage}"
                                               ContentStringFormat="P" />
                                    </Grid>
                                </Grid>
                            </ContentControl>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Orientation"
                                         Value="Vertical">
                                    <Setter Property="LayoutTransform"
                                            TargetName="Root">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsIndeterminate"
                                         Value="true">
                                    <Setter Property="Visibility"
                                            TargetName="IndeterminateRoot"
                                            Value="Visible" />
                                    <Setter Property="Visibility"
                                            TargetName="DeterminateRoot"
                                            Value="Collapsed" />
                                    <Setter Property="Background"
                                            TargetName="PART_Track"
                                            Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>

            <Style x:Key="SliderRepeatButtonStyle"
                   TargetType="RepeatButton">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RepeatButton">
                            <Rectangle Fill="Transparent" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BaseSliderThumbStyle"
                   TargetType="Thumb">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Background"
                        Value="{DynamicResource 2ndBackgroundBrush}" />
                <Setter Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter Property="BorderThickness"
                        Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Thumb}">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{DynamicResource DarkAccent}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource WindowBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsDragging"
                                         Value="True">
                                    <Setter Property="Background"
                                            Value="{DynamicResource LightAccent}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource WindowBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="False">
                                    <Setter Property="Background"
                                            Value="{DynamicResource ButtonTextDisabled}" />
                                    <Setter Property="BorderBrush"
                                            Value="{DynamicResource WindowForegroundBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="HorizontalSliderThumbStyle"
                   TargetType="Thumb"
                   BasedOn="{StaticResource BaseSliderThumbStyle}">
                <Setter Property="Height"
                        Value="22" />
                <Setter Property="Width"
                        Value="11" />
            </Style>

            <Style x:Key="VerticalSliderThumbStyle"
                   TargetType="Thumb"
                   BasedOn="{StaticResource BaseSliderThumbStyle}">
                <Setter Property="Height"
                        Value="11" />
                <Setter Property="Width"
                        Value="22" />
            </Style>

            <Style TargetType="Slider">
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="Stylus.IsPressAndHoldEnabled"
                        Value="false" />
                <Setter Property="Background"
                        Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Slider">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto"
                                                       MinHeight="{TemplateBinding Slider.MinHeight}" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <TickBar x:Name="TopTick"
                                             Grid.Row="0"
                                             Visibility="Collapsed"
                                             Placement="Top"
                                             Fill="{DynamicResource ButtonBackgroundPressed}"
                                             Height="4" />
                                    <TickBar x:Name="BottomTick"
                                             Grid.Row="2"
                                             Visibility="Collapsed"
                                             Placement="Bottom"
                                             Fill="{DynamicResource ButtonBackground}"
                                             Height="4" />
                                    <Border x:Name="TrackBackground"
                                            Grid.Row="1"
                                            Margin="5,0"
                                            VerticalAlignment="center"
                                            BorderBrush="{DynamicResource LightAccent}"
                                            BorderThickness="1"
                                            Background="{DynamicResource DarkAccent}"
                                            Height="4.0">
                                        <Canvas Margin="-6,-1">
                                            <Rectangle x:Name="PART_SelectionRange"
                                                       Fill="{DynamicResource 2ndBackgroundBrush}"
                                                       Height="4.0"
                                                       Visibility="Hidden"
                                                       StrokeThickness="1.0"
                                                       Stroke="{DynamicResource WindowBorderBrush}" />
                                        </Canvas>
                                    </Border>
                                    <Track Grid.Row="1"
                                           Name="PART_Track">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.DecreaseLarge}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                          Command="{x:Static Slider.IncreaseLarge}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb x:Name="Thumb"
                                                   Style="{StaticResource HorizontalSliderThumbStyle}" />
                                        </Track.Thumb>
                                    </Track>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="TickPlacement"
                                         Value="TopLeft">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="5,2,5,0" />
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="BottomRight">
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="TrackBackground"
                                            Property="Margin"
                                            Value="5,0,5,2" />
                                </Trigger>
                                <Trigger Property="TickPlacement"
                                         Value="Both">
                                    <Setter TargetName="TopTick"
                                            Property="Visibility"
                                            Value="Visible" />
                                    <Setter TargetName="BottomTick"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsSelectionRangeEnabled"
                                         Value="true">
                                    <Setter TargetName="PART_SelectionRange"
                                            Property="Visibility"
                                            Value="Visible" />
                                </Trigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter TargetName="TopTick"
                                            Property="Fill"
                                            Value="{DynamicResource ButtonTextDisabled}" />
                                    <Setter TargetName="BottomTick"
                                            Property="Fill"
                                            Value="{DynamicResource ButtonTextDisabled}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Orientation"
                             Value="Vertical">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Slider}">
                                    <Border Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            SnapsToDevicePixels="true">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto"
                                                                  MinWidth="{TemplateBinding Slider.MinWidth}" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <TickBar x:Name="TopTick"
                                                     Grid.Column="0"
                                                     Visibility="Collapsed"
                                                     Placement="Left"
                                                     Fill="{DynamicResource LightAccent}"
                                                     Width="4" />
                                            <TickBar x:Name="BottomTick"
                                                     Grid.Column="2"
                                                     Visibility="Collapsed"
                                                     Placement="Right"
                                                     Fill="{DynamicResource DarkAccent}"
                                                     Width="4" />
                                            <Border Name="TrackBackground"
                                                    Grid.Column="1"
                                                    Margin="0,5"
                                                    HorizontalAlignment="center"
                                                    BorderBrush="{DynamicResource WindowBorderBrush}"
                                                    BorderThickness="1"
                                                    Background="{DynamicResource WindowBackgroundBrush}"
                                                    Width="4.0">

                                                <Canvas Margin="-1,-6">
                                                    <Rectangle x:Name="PART_SelectionRange"
                                                               Fill="{DynamicResource LightAccent}"
                                                               Width="4.0"
                                                               Visibility="Hidden"
                                                               StrokeThickness="1.0"
                                                               Stroke="{DynamicResource DarkAccent}" />
                                                </Canvas>
                                            </Border>

                                            <Track Grid.Column="1"
                                                   Name="PART_Track">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                                  Command="{x:Static Slider.DecreaseLarge}" />
                                                </Track.DecreaseRepeatButton>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                                                  Command="{x:Static Slider.IncreaseLarge}" />
                                                </Track.IncreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb x:Name="Thumb"
                                                           Style="{StaticResource VerticalSliderThumbStyle}" />
                                                </Track.Thumb>
                                            </Track>
                                        </Grid>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="TickPlacement"
                                                 Value="TopLeft">
                                            <Setter TargetName="TopTick"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                            <Setter TargetName="TrackBackground"
                                                    Property="Margin"
                                                    Value="2,5,0,5" />
                                        </Trigger>
                                        <Trigger Property="TickPlacement"
                                                 Value="BottomRight">
                                            <Setter TargetName="BottomTick"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                            <Setter TargetName="TrackBackground"
                                                    Property="Margin"
                                                    Value="0,5,2,5" />
                                        </Trigger>
                                        <Trigger Property="TickPlacement"
                                                 Value="Both">
                                            <Setter TargetName="TopTick"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                            <Setter TargetName="BottomTick"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="IsSelectionRangeEnabled"
                                                 Value="true">
                                            <Setter TargetName="PART_SelectionRange"
                                                    Property="Visibility"
                                                    Value="Visible" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="false">
                                            <Setter TargetName="TopTick"
                                                    Property="Fill"
                                                    Value="{DynamicResource ButtonTextDisabled}" />
                                            <Setter TargetName="BottomTick"
                                                    Property="Fill"
                                                    Value="{DynamicResource ButtonTextDisabled}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <DataTemplate x:Key="AppListBoxItemTemplate">
                <Label Style="{DynamicResource LBLabelStyle}"
                       Content="{Binding Path=Name}"
                       FontSize="11">
                    <Label.RenderTransform>
                        <TranslateTransform />
                    </Label.RenderTransform>
                    <Label.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource ElementFadeIn}" />
                        </EventTrigger>
                    </Label.Triggers>
                    <Label.ToolTip>
                        <ToolTip Style="{DynamicResource ToolTipStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="0"
                                       Grid.Column="0"
                                       HorizontalAlignment="Left"
                                       Content="Company:" />
                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="0"
                                       Grid.Column="1"
                                       Content="{Binding Path=Company, Mode=OneWay}" />

                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="1"
                                       Grid.Column="0"
                                       HorizontalAlignment="Left"
                                       Content="Version:" />
                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Content="{Binding Path=Version, Mode=OneWay}" />

                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="2"
                                       Grid.Column="0"
                                       HorizontalAlignment="Left"
                                       Content="Description:" />
                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="2"
                                       Grid.Column="1"
                                       Content="{Binding Path=Description, Mode=OneWay}" />

                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="3"
                                       Grid.Column="0"
                                       HorizontalAlignment="Left"
                                       Content="File name:" />
                                <Label Style="{DynamicResource LabelStyle}"
                                       Grid.Row="3"
                                       Grid.Column="1"
                                       Content="{Binding Path=FileName, Mode=OneWay}" />
                            </Grid>
                        </ToolTip>
                    </Label.ToolTip>
                </Label>
            </DataTemplate>

            <DataTemplate x:Key="AppLimitDataTemplate">
                <Border BorderBrush="{DynamicResource 2ndBackgroundBrush}"
                        BorderThickness="0 0 0 2">
                    <Border.RenderTransform>
                        <TranslateTransform />
                    </Border.RenderTransform>
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard Storyboard="{StaticResource ElementFadeIn}" />
                        </EventTrigger>
                    </Border.Triggers>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="350"
                                              />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    Margin="15">
                            <Label Style="{DynamicResource LabelStyle}"
                                   Content="Span:"
                                   FontSize="15" />
                            <Label Style="{DynamicResource LabelStyle}"
                                   Content="{Binding LimitSpan}"
                                   FontSize="15" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal"
                                    Grid.Row="1">
                            <Label Style="{DynamicResource LabelStyle}"
                                   Content="Limit:" />
                            <Slider Minimum="0"
                                    Maximum="{Binding LimitSpan, Converter={StaticResource convertLimitSpanToMaxSlider}}"
                                    TickFrequency="0.5"
                                    IsSnapToTickEnabled="True"
                                    Value="{Binding Limit, Converter={StaticResource convertAppLimitToTimeSpan}, Mode=TwoWay}"
                                    MinWidth="175"
                                    Width="250"
                                    Name="sliderLimit" />
                        </StackPanel>
                        <Label Style="{DynamicResource LabelStyle}"
                               Grid.Row="2"
                               HorizontalAlignment="Center"
                               Content="{Binding ElementName=sliderLimit,Path=Value, StringFormat=hh\\:mm, Converter={StaticResource convertDoubleToTimespan}}" />
                        <StackPanel Orientation="Horizontal"
                                    Grid.Row="3">
                            <Label Style="{DynamicResource LabelStyle}"
                                   Content="Limit reached action:" />
                            <Label Style="{DynamicResource SelectableLabelStyle}"
                                   Content="{Binding LimitReachedAction, Converter={StaticResource limitReachedActionToStringConverter}}"
                                   Name="lblLimitAction">
                                <Label.InputBindings>
                                    <MouseBinding Gesture="LeftClick"
                                                  Command="{Binding OpenLimitActionPopupCommand}">
                                    </MouseBinding>
                                </Label.InputBindings>
                            </Label>
                        </StackPanel>
                        <Popup IsOpen="{Binding IsPopupLimitActionOpen}"
                               Placement="Right"
                               PlacementTarget="{Binding ElementName=lblLimitAction}"
                               PopupAnimation="Slide">
                            <Border Style="{DynamicResource ThemeBorderStyle}">
                                <StackPanel Orientation="Vertical">
                                    <Label Style="{DynamicResource SelectableLabelStyle}"
                                           Content="Show warning">
                                        <Label.InputBindings>
                                            <MouseBinding Gesture="LeftClick"
                                                          Command="{Binding SetLimitReachedCommand}"
                                                          CommandParameter="WARN" />
                                        </Label.InputBindings>
                                    </Label>
                                    <Label Style="{DynamicResource SelectableLabelStyle}"
                                           Content="Shutdown app">
                                        <Label.InputBindings>
                                            <MouseBinding Gesture="LeftClick"
                                                          Command="{Binding SetLimitReachedCommand}"
                                                          CommandParameter="SHUTDOWN" />
                                        </Label.InputBindings>
                                    </Label>
                                    <Label Style="{DynamicResource SelectableLabelStyle}"
                                           Content="Show warning and shutdown app">
                                        <Label.InputBindings>
                                            <MouseBinding Gesture="LeftClick"
                                                          Command="{Binding SetLimitReachedCommand}"
                                                          CommandParameter="BOTH" />
                                        </Label.InputBindings>
                                    </Label>
                                </StackPanel>
                            </Border>
                        </Popup>
                    </Grid>
                </Border>
            </DataTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>    
    