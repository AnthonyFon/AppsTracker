<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AppsTracker.DAL.Fakes</name>
    </assembly>
    <members>
        <member name="T:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer">
            <summary>Shim type of AppsTracker.DAL.AppsDataBaseInitializer</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.#ctor(AppsTracker.DAL.AppsDataBaseInitializer)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.Bind(System.Data.Entity.IDatabaseInitializer{AppsTracker.DAL.AppsEntities})">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.Constructor">
            <summary>Sets the shim of AppsDataBaseInitializer.AppsDataBaseInitializer()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.InitializeDatabaseAppsEntities">
            <summary>Sets the shim of AppsDataBaseInitializer.InitializeDatabase(AppsEntities context)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsDataBaseInitializer.AllInstances.InitializeDatabaseAppsEntities">
            <summary>Sets the shim of AppsDataBaseInitializer.InitializeDatabase(AppsEntities context)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Fakes.ShimAppsEntities">
            <summary>Shim type of AppsTracker.DAL.AppsEntities</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsEntities.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsEntities.#ctor(AppsTracker.DAL.AppsEntities)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsEntities.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsEntities.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsEntities.Bind(System.Data.Entity.Infrastructure.IObjectContextAdapter)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.ShimAppsEntities.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.ApplicationsGet">
            <summary>Sets the shim of AppsEntities.get_Applications()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.ApplicationsSetDbSetOfAplication">
            <summary>Sets the shim of AppsEntities.set_Applications(DbSet`1&lt;Aplication&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AppsToBlocksGet">
            <summary>Sets the shim of AppsEntities.get_AppsToBlocks()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AppsToBlocksSetDbSetOfAppsToBlock">
            <summary>Sets the shim of AppsEntities.set_AppsToBlocks(DbSet`1&lt;AppsToBlock&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.BlockedAppsGet">
            <summary>Sets the shim of AppsEntities.get_BlockedApps()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.BlockedAppsSetDbSetOfBlockedApp">
            <summary>Sets the shim of AppsEntities.set_BlockedApps(DbSet`1&lt;BlockedApp&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.ConnectionStringGet">
            <summary>Sets the shim of AppsEntities.get_ConnectionString()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.Constructor">
            <summary>Sets the shim of AppsEntities.AppsEntities()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.FileLogsGet">
            <summary>Sets the shim of AppsEntities.get_FileLogs()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.FileLogsSetDbSetOfFileLog">
            <summary>Sets the shim of AppsEntities.set_FileLogs(DbSet`1&lt;FileLog&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.FlushSqlString">
            <summary>Sets the shim of AppsEntities.FlushSql(String s)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.GetConnectionString">
            <summary>Sets the shim of AppsEntities.GetConnectionString()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.LogsGet">
            <summary>Sets the shim of AppsEntities.get_Logs()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.LogsSetDbSetOfLog">
            <summary>Sets the shim of AppsEntities.set_Logs(DbSet`1&lt;Log&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of AppsEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.ScreenshotsGet">
            <summary>Sets the shim of AppsEntities.get_Screenshots()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.ScreenshotsSetDbSetOfScreenshot">
            <summary>Sets the shim of AppsEntities.set_Screenshots(DbSet`1&lt;Screenshot&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.SettingsGet">
            <summary>Sets the shim of AppsEntities.get_Settings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.SettingsSetDbSetOfSetting">
            <summary>Sets the shim of AppsEntities.set_Settings(DbSet`1&lt;Setting&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.StaticConstructor">
            <summary>Sets the shim of AppsEntities.AppsEntities()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.UsageTypesGet">
            <summary>Sets the shim of AppsEntities.get_UsageTypes()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.UsageTypesSetDbSetOfUsageType">
            <summary>Sets the shim of AppsEntities.set_UsageTypes(DbSet`1&lt;UsageType&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.UsagesGet">
            <summary>Sets the shim of AppsEntities.get_Usages()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.UsagesSetDbSetOfUsage">
            <summary>Sets the shim of AppsEntities.set_Usages(DbSet`1&lt;Usage&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.UsersGet">
            <summary>Sets the shim of AppsEntities.get_Users()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.UsersSetDbSetOfUzer">
            <summary>Sets the shim of AppsEntities.set_Users(DbSet`1&lt;Uzer&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.WindowsGet">
            <summary>Sets the shim of AppsEntities.get_Windows()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.WindowsSetDbSetOfWindow">
            <summary>Sets the shim of AppsEntities.set_Windows(DbSet`1&lt;Window&gt; value)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.ApplicationsGet">
            <summary>Sets the shim of AppsEntities.get_Applications()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.ApplicationsSetDbSetOfAplication">
            <summary>Sets the shim of AppsEntities.set_Applications(DbSet`1&lt;Aplication&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.AppsToBlocksGet">
            <summary>Sets the shim of AppsEntities.get_AppsToBlocks()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.AppsToBlocksSetDbSetOfAppsToBlock">
            <summary>Sets the shim of AppsEntities.set_AppsToBlocks(DbSet`1&lt;AppsToBlock&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.BlockedAppsGet">
            <summary>Sets the shim of AppsEntities.get_BlockedApps()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.BlockedAppsSetDbSetOfBlockedApp">
            <summary>Sets the shim of AppsEntities.set_BlockedApps(DbSet`1&lt;BlockedApp&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.FileLogsGet">
            <summary>Sets the shim of AppsEntities.get_FileLogs()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.FileLogsSetDbSetOfFileLog">
            <summary>Sets the shim of AppsEntities.set_FileLogs(DbSet`1&lt;FileLog&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.FlushSqlString">
            <summary>Sets the shim of AppsEntities.FlushSql(String s)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.LogsGet">
            <summary>Sets the shim of AppsEntities.get_Logs()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.LogsSetDbSetOfLog">
            <summary>Sets the shim of AppsEntities.set_Logs(DbSet`1&lt;Log&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.OnModelCreatingDbModelBuilder">
            <summary>Sets the shim of AppsEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.ScreenshotsGet">
            <summary>Sets the shim of AppsEntities.get_Screenshots()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.ScreenshotsSetDbSetOfScreenshot">
            <summary>Sets the shim of AppsEntities.set_Screenshots(DbSet`1&lt;Screenshot&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.SettingsGet">
            <summary>Sets the shim of AppsEntities.get_Settings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.SettingsSetDbSetOfSetting">
            <summary>Sets the shim of AppsEntities.set_Settings(DbSet`1&lt;Setting&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.UsageTypesGet">
            <summary>Sets the shim of AppsEntities.get_UsageTypes()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.UsageTypesSetDbSetOfUsageType">
            <summary>Sets the shim of AppsEntities.set_UsageTypes(DbSet`1&lt;UsageType&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.UsagesGet">
            <summary>Sets the shim of AppsEntities.get_Usages()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.UsagesSetDbSetOfUsage">
            <summary>Sets the shim of AppsEntities.set_Usages(DbSet`1&lt;Usage&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.UsersGet">
            <summary>Sets the shim of AppsEntities.get_Users()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.UsersSetDbSetOfUzer">
            <summary>Sets the shim of AppsEntities.set_Users(DbSet`1&lt;Uzer&gt; value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.WindowsGet">
            <summary>Sets the shim of AppsEntities.get_Windows()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.ShimAppsEntities.AllInstances.WindowsSetDbSetOfWindow">
            <summary>Sets the shim of AppsEntities.set_Windows(DbSet`1&lt;Window&gt; value)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Fakes.StubAppsDataBaseInitializer">
            <summary>Stub type of AppsTracker.DAL.AppsDataBaseInitializer</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsDataBaseInitializer.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsDataBaseInitializer.InitializeStub">
            <summary>Initializes a new instance of type StubAppsDataBaseInitializer</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.StubAppsDataBaseInitializer.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.StubAppsDataBaseInitializer.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.StubAppsDataBaseInitializer.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AppsTracker.DAL.Fakes.StubAppsEntities">
            <summary>Stub type of AppsTracker.DAL.AppsEntities</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.Dispose(System.Boolean)">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.DisposeBoolean">
            <summary>Sets the stub of DbContext.Dispose(Boolean disposing)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.Equals(System.Object)">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.EqualsObject">
            <summary>Sets the stub of DbContext.Equals(Object obj)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.GetHashCode">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.GetHashCode01">
            <summary>Sets the stub of DbContext.GetHashCode()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.InitializeStub">
            <summary>Initializes a new instance of type StubAppsEntities</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>Sets the stub of AppsEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.OnModelCreatingDbModelBuilder">
            <summary>Sets the stub of AppsEntities.OnModelCreating(DbModelBuilder modelBuilder)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.SaveChanges">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.SaveChanges01">
            <summary>Sets the stub of DbContext.SaveChanges()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.SaveChangesAsync">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.SaveChangesAsync01">
            <summary>Sets the stub of DbContext.SaveChangesAsync()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.SaveChangesAsyncCancellationToken">
            <summary>Sets the stub of DbContext.SaveChangesAsync(CancellationToken cancellationToken)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.Set(System.Type)">
            <summary>Sets the stub of DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.Set``1">
            <summary>Sets the stub of DbContext.Set()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.SetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.Entity.DbSet{``0}})">
            <summary>Sets stubs of Set()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.SetType">
            <summary>Sets the stub of DbContext.Set(Type entityType)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.ShouldValidateEntityDbEntityEntry">
            <summary>Sets the stub of DbContext.ShouldValidateEntity(DbEntityEntry entityEntry)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.ToString">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.ToString01">
            <summary>Sets the stub of DbContext.ToString()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Fakes.StubAppsEntities.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Fakes.StubAppsEntities.ValidateEntityDbEntityEntryIDictionaryOfObjectObject">
            <summary>Sets the stub of DbContext.ValidateEntity(DbEntityEntry entityEntry, IDictionary`2&lt;Object,Object&gt; items)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.StubAppsEntities.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.StubAppsEntities.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Fakes.StubAppsEntities.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimAppsService">
            <summary>Shim type of AppsTracker.DAL.Service.AppsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.#ctor(AppsTracker.DAL.Service.AppsService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.Bind(AppsTracker.DAL.Service.IAppsService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.Bind(AppsTracker.DAL.Service.IBaseService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.GetFilteredOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of AppsService.GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.GetFilteredOf1ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of AppsService.GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] navigations)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimAppsService.AddToBlockedListListOfAplicationStringInt32">
            <summary>Sets the shim of AppsService.AddToBlockedList(List`1&lt;Aplication&gt; apps, String blockUsername, Int32 loadUserID)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimAppsService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimAppsService.Constructor">
            <summary>Sets the shim of AppsService.AppsService()</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimAppsService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.AllInstances.GetFilteredOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AppsTracker.DAL.Service.AppsService,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of AppsService.GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimAppsService.AllInstances.GetFilteredOf1ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{AppsTracker.DAL.Service.AppsService,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets the shim of AppsService.GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] navigations)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimAppsService.AllInstances.AddToBlockedListListOfAplicationStringInt32">
            <summary>Sets the shim of AppsService.AddToBlockedList(List`1&lt;Aplication&gt; apps, String blockUsername, Int32 loadUserID)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimChartService">
            <summary>Shim type of AppsTracker.DAL.Service.ChartService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimChartService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimChartService.#ctor(AppsTracker.DAL.Service.ChartService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimChartService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimChartService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimChartService.Bind(AppsTracker.DAL.Service.IBaseService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimChartService.Bind(AppsTracker.DAL.Service.IChartService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimChartService.Bind(System.IDisposable)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.BreakUsagesByDayIEnumerableOfUsage">
            <summary>Sets the shim of ChartService.BreakUsagesByDay(IEnumerable`1&lt;Usage&gt; usages)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.CacheLogsInt32String">
            <summary>Sets the shim of ChartService.CacheLogs(Int32 userID, String appName)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.Constructor">
            <summary>Sets the shim of ChartService.ChartService()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.Dispose">
            <summary>Sets the shim of ChartService.Dispose()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetAllUsersDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetAllUsers(DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetAppsUsageSeriesInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetAppsUsageSeries(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetDailySeriesInt32DateTime">
            <summary>Sets the shim of ChartService.GetDailySeries(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetDailyWindowSeriesInt32StringIEnumerableOfStringIEnumerableOfDateTime">
            <summary>Sets the shim of ChartService.GetDailyWindowSeries(Int32 userID, String appName, IEnumerable`1&lt;String&gt; selectedWindows, IEnumerable`1&lt;DateTime&gt; days)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetDayInfoInt32DateTime">
            <summary>Sets the shim of ChartService.GetDayInfo(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetDayTopAppsInt32DateTime">
            <summary>Sets the shim of ChartService.GetDayTopApps(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetDayTopWindowsInt32StringDateTime">
            <summary>Sets the shim of ChartService.GetDayTopWindows(Int32 userID, String appName, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetDayViewInt32DateTime">
            <summary>Sets the shim of ChartService.GetDayView(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetDaysInYearInt32">
            <summary>Sets the shim of ChartService.GetDaysInYear(Int32 year)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetKeystrokesByAppInt32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetKeystrokesByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetKeystrokesInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetKeystrokes(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetLogTopAppsInt32Int32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetLogTopApps(Int32 userID, Int32 appID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetLogTopWindowsInt32StringIEnumerableOfDateTime">
            <summary>Sets the shim of ChartService.GetLogTopWindows(Int32 userID, String appName, IEnumerable`1&lt;DateTime&gt; days)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetMostUsedAppsInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetMostUsedApps(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetScreenshotsByAppInt32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetScreenshotsByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetScreenshotsInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetScreenshots(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetSingleMostUsedAppInt32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetSingleMostUsedApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.GetUsageSeriesStringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetUsageSeries(String username, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetAllUsersb__f8Usage">
            <summary>Sets the shim of ChartService.&lt;GetAllUsers&gt;b__f8(Usage u)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetAllUsersb__f9IGroupingOfStringUsage">
            <summary>Sets the shim of ChartService.&lt;GetAllUsers&gt;b__f9(IGrouping`2&lt;String,Usage&gt; g)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetAllUsersb__faUsage">
            <summary>Sets the shim of ChartService.&lt;GetAllUsers&gt;b__fa(Usage l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetAppsUsageSeriesb__d0Log">
            <summary>Sets the shim of ChartService.&lt;GetAppsUsageSeries&gt;b__d0(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetAppsUsageSeriesb__d3Log">
            <summary>Sets the shim of ChartService.&lt;GetAppsUsageSeries&gt;b__d3(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetAppsUsageSeriesb__d6MostUsedAppModel">
            <summary>Sets the shim of ChartService.&lt;GetAppsUsageSeries&gt;b__d6(MostUsedAppModel d)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDailySeriesb__7fUsage">
            <summary>Sets the shim of ChartService.&lt;GetDailySeries&gt;b__7f(Usage u)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDailyWindowSeriesb__3bLog">
            <summary>Sets the shim of ChartService.&lt;GetDailyWindowSeries&gt;b__3b(Log g)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDailyWindowSeriesb__3cLog">
            <summary>Sets the shim of ChartService.&lt;GetDailyWindowSeries&gt;b__3c(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayInfob__119Usage">
            <summary>Sets the shim of ChartService.&lt;GetDayInfo&gt;b__119(Usage l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayInfob__11aUsage">
            <summary>Sets the shim of ChartService.&lt;GetDayInfo&gt;b__11a(Usage l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayTopAppsb__54Log">
            <summary>Sets the shim of ChartService.&lt;GetDayTopApps&gt;b__54(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayTopAppsb__55Log">
            <summary>Sets the shim of ChartService.&lt;GetDayTopApps&gt;b__55(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayTopAppsb__56IGroupingOfStringLog">
            <summary>Sets the shim of ChartService.&lt;GetDayTopApps&gt;b__56(IGrouping`2&lt;String,Log&gt; grp)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayTopAppsb__5aTopAppsModel">
            <summary>Sets the shim of ChartService.&lt;GetDayTopApps&gt;b__5a(TopAppsModel t)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayTopWindowsb__66Log">
            <summary>Sets the shim of ChartService.&lt;GetDayTopWindows&gt;b__66(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayTopWindowsb__67Log">
            <summary>Sets the shim of ChartService.&lt;GetDayTopWindows&gt;b__67(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayTopWindowsb__6bTopWindowsModel">
            <summary>Sets the shim of ChartService.&lt;GetDayTopWindows&gt;b__6b(TopWindowsModel t)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayViewb__49Log">
            <summary>Sets the shim of ChartService.&lt;GetDayView&gt;b__49(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayViewb__4aUsage">
            <summary>Sets the shim of ChartService.&lt;GetDayView&gt;b__4a(Usage u)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetDayViewb__4bDayViewModel">
            <summary>Sets the shim of ChartService.&lt;GetDayView&gt;b__4b(DayViewModel d)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetKeystrokesByAppb__c5Log">
            <summary>Sets the shim of ChartService.&lt;GetKeystrokesByApp&gt;b__c5(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetKeystrokesb__b6Log">
            <summary>Sets the shim of ChartService.&lt;GetKeystrokes&gt;b__b6(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetKeystrokesb__b7IGroupingOfStringLog">
            <summary>Sets the shim of ChartService.&lt;GetKeystrokes&gt;b__b7(IGrouping`2&lt;String,Log&gt; g)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetKeystrokesb__b8Log">
            <summary>Sets the shim of ChartService.&lt;GetKeystrokes&gt;b__b8(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetKeystrokesb__b9KeystrokeModel">
            <summary>Sets the shim of ChartService.&lt;GetKeystrokes&gt;b__b9(KeystrokeModel k)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetLogTopAppsb__4Log">
            <summary>Sets the shim of ChartService.&lt;GetLogTopApps&gt;b__4(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetLogTopAppsb__cTopAppsModel">
            <summary>Sets the shim of ChartService.&lt;GetLogTopApps&gt;b__c(TopAppsModel t)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetLogTopWindowsb__22Log">
            <summary>Sets the shim of ChartService.&lt;GetLogTopWindows&gt;b__22(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetLogTopWindowsb__23Log">
            <summary>Sets the shim of ChartService.&lt;GetLogTopWindows&gt;b__23(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetLogTopWindowsb__24IGroupingOfStringLog">
            <summary>Sets the shim of ChartService.&lt;GetLogTopWindows&gt;b__24(IGrouping`2&lt;String,Log&gt; grp)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetLogTopWindowsb__28TopWindowsModel">
            <summary>Sets the shim of ChartService.&lt;GetLogTopWindows&gt;b__28(TopWindowsModel t)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetMostUsedAppsb__a0Log">
            <summary>Sets the shim of ChartService.&lt;GetMostUsedApps&gt;b__a0(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetMostUsedAppsb__a1IGroupingOfStringLog">
            <summary>Sets the shim of ChartService.&lt;GetMostUsedApps&gt;b__a1(IGrouping`2&lt;String,Log&gt; g)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetMostUsedAppsb__a2Log">
            <summary>Sets the shim of ChartService.&lt;GetMostUsedApps&gt;b__a2(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetScreenshotsb__e5Screenshot">
            <summary>Sets the shim of ChartService.&lt;GetScreenshots&gt;b__e5(Screenshot s)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetScreenshotsb__e6IGroupingOfStringScreenshot">
            <summary>Sets the shim of ChartService.&lt;GetScreenshots&gt;b__e6(IGrouping`2&lt;String,Screenshot&gt; g)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetSingleMostUsedAppb__adLog">
            <summary>Sets the shim of ChartService.&lt;GetSingleMostUsedApp&gt;b__ad(Log l)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetUsageSeriesb__109Usage">
            <summary>Sets the shim of ChartService.&lt;GetUsageSeries&gt;b__109(Usage u)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService._GetUsageSeriesb__10eUsageTypeSeries">
            <summary>Sets the shim of ChartService.&lt;GetUsageSeries&gt;b__10e(UsageTypeSeries c)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.BreakUsagesByDayIEnumerableOfUsage">
            <summary>Sets the shim of ChartService.BreakUsagesByDay(IEnumerable`1&lt;Usage&gt; usages)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.CacheLogsInt32String">
            <summary>Sets the shim of ChartService.CacheLogs(Int32 userID, String appName)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.Dispose">
            <summary>Sets the shim of ChartService.Dispose()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetAllUsersDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetAllUsers(DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetAppsUsageSeriesInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetAppsUsageSeries(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetDailySeriesInt32DateTime">
            <summary>Sets the shim of ChartService.GetDailySeries(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetDailyWindowSeriesInt32StringIEnumerableOfStringIEnumerableOfDateTime">
            <summary>Sets the shim of ChartService.GetDailyWindowSeries(Int32 userID, String appName, IEnumerable`1&lt;String&gt; selectedWindows, IEnumerable`1&lt;DateTime&gt; days)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetDayInfoInt32DateTime">
            <summary>Sets the shim of ChartService.GetDayInfo(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetDayTopAppsInt32DateTime">
            <summary>Sets the shim of ChartService.GetDayTopApps(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetDayTopWindowsInt32StringDateTime">
            <summary>Sets the shim of ChartService.GetDayTopWindows(Int32 userID, String appName, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetDayViewInt32DateTime">
            <summary>Sets the shim of ChartService.GetDayView(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetDaysInYearInt32">
            <summary>Sets the shim of ChartService.GetDaysInYear(Int32 year)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetKeystrokesByAppInt32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetKeystrokesByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetKeystrokesInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetKeystrokes(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetLogTopAppsInt32Int32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetLogTopApps(Int32 userID, Int32 appID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetLogTopWindowsInt32StringIEnumerableOfDateTime">
            <summary>Sets the shim of ChartService.GetLogTopWindows(Int32 userID, String appName, IEnumerable`1&lt;DateTime&gt; days)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetMostUsedAppsInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetMostUsedApps(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetScreenshotsByAppInt32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetScreenshotsByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetScreenshotsInt32DateTimeDateTime">
            <summary>Sets the shim of ChartService.GetScreenshots(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetSingleMostUsedAppInt32StringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetSingleMostUsedApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimChartService.AllInstances.GetUsageSeriesStringDateTimeDateTime">
            <summary>Sets the shim of ChartService.GetUsageSeries(String username, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimServiceFactory">
            <summary>Shim type of AppsTracker.DAL.Service.ServiceFactory</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.#ctor(AppsTracker.DAL.Service.ServiceFactory)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.ContainsKeyOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Boolean})">
            <summary>Sets the shim of ServiceFactory.ContainsKey()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.GetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>Sets the shim of ServiceFactory.Get()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.RegisterOf1FuncOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Action{System.Func{``0}})">
            <summary>Sets the shim of ServiceFactory.Register(Func`1&lt;!!0&gt; getter)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.Constructor">
            <summary>Sets the shim of ServiceFactory.ServiceFactory()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.StaticConstructor">
            <summary>Sets the shim of ServiceFactory.ServiceFactory()</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimServiceFactory.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService">
            <summary>Shim type of AppsTracker.DAL.Service.SqlSettingsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.#ctor(AppsTracker.DAL.Service.SqlSettingsService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.Bind(AppsTracker.DAL.Service.IBaseService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.Bind(AppsTracker.DAL.Service.ISqlSettingsService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.Bind(System.ComponentModel.INotifyPropertyChanged)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.Constructor">
            <summary>Sets the shim of SqlSettingsService.SqlSettingsService()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.CreateSettingsAndUsageTypes">
            <summary>Sets the shim of SqlSettingsService.CreateSettingsAndUsageTypes()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.InstanceGet">
            <summary>Sets the shim of SqlSettingsService.get_Instance()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.NotifyPropertyChanged">
            <summary>Sets the shim of SqlSettingsService.NotifyPropertyChanged()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of SqlSettingsService.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of SqlSettingsService.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.SaveChangesAsyncSetting">
            <summary>Sets the shim of SqlSettingsService.SaveChangesAsync(Setting settings)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.SaveChangesSetting">
            <summary>Sets the shim of SqlSettingsService.SaveChanges(Setting settings)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.SettingsGet">
            <summary>Sets the shim of SqlSettingsService.get_Settings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.StaticConstructor">
            <summary>Sets the shim of SqlSettingsService.SqlSettingsService()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService._cctorb__7">
            <summary>Sets the shim of SqlSettingsService.&lt;.cctor&gt;b__7()</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances.CreateSettingsAndUsageTypes">
            <summary>Sets the shim of SqlSettingsService.CreateSettingsAndUsageTypes()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances.NotifyPropertyChanged">
            <summary>Sets the shim of SqlSettingsService.NotifyPropertyChanged()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances.PropertyChangedAddPropertyChangedEventHandler">
            <summary>Sets the shim of SqlSettingsService.add_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances.PropertyChangedRemovePropertyChangedEventHandler">
            <summary>Sets the shim of SqlSettingsService.remove_PropertyChanged(PropertyChangedEventHandler value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances.SaveChangesAsyncSetting">
            <summary>Sets the shim of SqlSettingsService.SaveChangesAsync(Setting settings)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances.SaveChangesSetting">
            <summary>Sets the shim of SqlSettingsService.SaveChanges(Setting settings)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimSqlSettingsService.AllInstances.SettingsGet">
            <summary>Sets the shim of SqlSettingsService.get_Settings()</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService">
            <summary>Shim type of AppsTracker.DAL.Service.XmlSettingsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.#ctor">
            <summary>Initializes a new shim instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.#ctor(AppsTracker.DAL.Service.XmlSettingsService)">
            <summary>Initializes a new shim for the given instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.BehaveAsCurrent">
            <summary>Assigns the &apos;Current&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.BehaveAsNotImplemented">
            <summary>Assigns the &apos;NotImplemented&apos; behavior for all methods of the shimmed type</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.Bind(AppsTracker.DAL.Service.IBaseService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.Bind(AppsTracker.DAL.Service.IXmlSettingsService)">
            <summary>Binds the members of the interface to the shim.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.Behavior">
            <summary>Assigns the behavior for all methods of the shimmed type</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.ConstructSettings">
            <summary>Sets the shim of XmlSettingsService.ConstructSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.Constructor">
            <summary>Sets the shim of XmlSettingsService.XmlSettingsService()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.DaysViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_DaysViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.DaysViewSettingsSetDaysViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_DaysViewSettings(DaysViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.Initialize">
            <summary>Sets the shim of XmlSettingsService.Initialize()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.InstanceGet">
            <summary>Sets the shim of XmlSettingsService.get_Instance()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.KeylogsViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_KeylogsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.KeylogsViewSettingsSetKeylogsViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_KeylogsViewSettings(KeylogsViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.LogsViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_LogsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.LogsViewSettingsSetLogsViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_LogsViewSettings(LogsViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.ScreenshotsViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_ScreenshotsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.ScreenshotsViewSettingsSetScreenshotsViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_ScreenshotsViewSettings(ScreenshotsViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.ShutDown">
            <summary>Sets the shim of XmlSettingsService.ShutDown()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.StaticConstructor">
            <summary>Sets the shim of XmlSettingsService.XmlSettingsService()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.TrySetDaysViewSettingsXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetDaysViewSettings(XElement root)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.TrySetKeylogsViewValuesXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetKeylogsViewValues(XElement root)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.TrySetLogsViewSettingsXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetLogsViewSettings(XElement root)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.TrySetScreenshotsViewValuesXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetScreenshotsViewValues(XElement root)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService._cctorb__0">
            <summary>Sets the shim of XmlSettingsService.&lt;.cctor&gt;b__0()</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances">
            <summary>Define shims for all instances members</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.ConstructSettings">
            <summary>Sets the shim of XmlSettingsService.ConstructSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.DaysViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_DaysViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.DaysViewSettingsSetDaysViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_DaysViewSettings(DaysViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.Initialize">
            <summary>Sets the shim of XmlSettingsService.Initialize()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.KeylogsViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_KeylogsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.KeylogsViewSettingsSetKeylogsViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_KeylogsViewSettings(KeylogsViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.LogsViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_LogsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.LogsViewSettingsSetLogsViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_LogsViewSettings(LogsViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.ScreenshotsViewSettingsGet">
            <summary>Sets the shim of XmlSettingsService.get_ScreenshotsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.ScreenshotsViewSettingsSetScreenshotsViewSettings">
            <summary>Sets the shim of XmlSettingsService.set_ScreenshotsViewSettings(ScreenshotsViewSettings value)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.ShutDown">
            <summary>Sets the shim of XmlSettingsService.ShutDown()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.TrySetDaysViewSettingsXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetDaysViewSettings(XElement root)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.TrySetKeylogsViewValuesXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetKeylogsViewValues(XElement root)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.TrySetLogsViewSettingsXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetLogsViewSettings(XElement root)</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.ShimXmlSettingsService.AllInstances.TrySetScreenshotsViewValuesXElement">
            <summary>Sets the shim of XmlSettingsService.TrySetScreenshotsViewValues(XElement root)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.StubChartService">
            <summary>Stub type of AppsTracker.DAL.Service.ChartService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubChartService.#ctor">
            <summary>Initializes a new instance</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubChartService.InitializeStub">
            <summary>Initializes a new instance of type StubChartService</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubChartService.CallBase">
            <summary>Gets or sets a value that indicates if the base method should be called instead of the fallback behavior</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubChartService.InstanceBehavior">
            <summary>Gets or sets the instance behavior.</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubChartService.InstanceObserver">
            <summary>Gets or sets the instance observer.</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.StubIAppsService">
            <summary>Stub type of AppsTracker.DAL.Service.IAppsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIAppsService.#ctor">
            <summary>Initializes a new instance of type StubIAppsService</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIAppsService.AddToBlockedListListOfAplicationStringInt32">
            <summary>Sets the stub of IAppsService.AddToBlockedList(List`1&lt;Aplication&gt; apps, String blockUsername, Int32 loadUserID)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIAppsService.atdal::AppsTracker#DAL#Service#IAppsService#AddToBlockedList(System.Collections.Generic.List{AppsTracker.Models.EntityModels.Aplication},System.String,System.Int32)">
            <summary>Sets the stub of IAppsService.AddToBlockedList(List`1&lt;Aplication&gt; apps, String blockUsername, Int32 loadUserID)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIAppsService.atdal::AppsTracker#DAL#Service#IAppsService#GetFiltered``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>Sets the stub of IAppsService.GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIAppsService.atdal::AppsTracker#DAL#Service#IAppsService#GetFiltered``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>Sets the stub of IAppsService.GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] navigations)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIAppsService.GetFilteredOf1ExpressionOfFuncOfM0Boolean``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIAppsService.GetFilteredOf1ExpressionOfFuncOfM0BooleanExpressionOfFuncOfM0ObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[],System.Collections.Generic.IEnumerable{``0}})">
            <summary>Sets stubs of GetFiltered(Expression`1&lt;Func`2&lt;!!0,Boolean&gt;&gt; filter, Expression`1&lt;Func`2&lt;!!0,Object&gt;&gt;[] navigations)</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.StubIBaseService">
            <summary>Stub type of AppsTracker.DAL.Service.IBaseService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIBaseService.#ctor">
            <summary>Initializes a new instance of type StubIBaseService</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.StubIChartService">
            <summary>Stub type of AppsTracker.DAL.Service.IChartService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.#ctor">
            <summary>Initializes a new instance of type StubIChartService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetAllUsers(System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetAllUsers(DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetAppsUsageSeries(System.Int32,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetAppsUsageSeries(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetDailySeries(System.Int32,System.DateTime)">
            <summary>Sets the stub of IChartService.GetDailySeries(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetDailyWindowSeries(System.Int32,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>Sets the stub of IChartService.GetDailyWindowSeries(Int32 userID, String appName, IEnumerable`1&lt;String&gt; selectedWindows, IEnumerable`1&lt;DateTime&gt; days)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetDayInfo(System.Int32,System.DateTime)">
            <summary>Sets the stub of IChartService.GetDayInfo(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetDayTopApps(System.Int32,System.DateTime)">
            <summary>Sets the stub of IChartService.GetDayTopApps(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetDayTopWindows(System.Int32,System.String,System.DateTime)">
            <summary>Sets the stub of IChartService.GetDayTopWindows(Int32 userID, String appName, DateTime dateFrom)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetDayView(System.Int32,System.DateTime)">
            <summary>Sets the stub of IChartService.GetDayView(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetKeystrokes(System.Int32,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetKeystrokes(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetKeystrokesByApp(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetKeystrokesByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetLogTopApps(System.Int32,System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetLogTopApps(Int32 userID, Int32 appID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetLogTopWindows(System.Int32,System.String,System.Collections.Generic.IEnumerable{System.DateTime})">
            <summary>Sets the stub of IChartService.GetLogTopWindows(Int32 userID, String appName, IEnumerable`1&lt;DateTime&gt; dates)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetMostUsedApps(System.Int32,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetMostUsedApps(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetScreenshots(System.Int32,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetScreenshots(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetScreenshotsByApp(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetScreenshotsByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetSingleMostUsedApp(System.Int32,System.String,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetSingleMostUsedApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.atdal::AppsTracker#DAL#Service#IChartService#GetUsageSeries(System.String,System.DateTime,System.DateTime)">
            <summary>Sets the stub of IChartService.GetUsageSeries(String username, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetAllUsersDateTimeDateTime">
            <summary>Sets the stub of IChartService.GetAllUsers(DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetAppsUsageSeriesInt32DateTimeDateTime">
            <summary>Sets the stub of IChartService.GetAppsUsageSeries(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetDailySeriesInt32DateTime">
            <summary>Sets the stub of IChartService.GetDailySeries(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetDailyWindowSeriesInt32StringIEnumerableOfStringIEnumerableOfDateTime">
            <summary>Sets the stub of IChartService.GetDailyWindowSeries(Int32 userID, String appName, IEnumerable`1&lt;String&gt; selectedWindows, IEnumerable`1&lt;DateTime&gt; days)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetDayInfoInt32DateTime">
            <summary>Sets the stub of IChartService.GetDayInfo(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetDayTopAppsInt32DateTime">
            <summary>Sets the stub of IChartService.GetDayTopApps(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetDayTopWindowsInt32StringDateTime">
            <summary>Sets the stub of IChartService.GetDayTopWindows(Int32 userID, String appName, DateTime dateFrom)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetDayViewInt32DateTime">
            <summary>Sets the stub of IChartService.GetDayView(Int32 userID, DateTime dateFrom)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetKeystrokesByAppInt32StringDateTimeDateTime">
            <summary>Sets the stub of IChartService.GetKeystrokesByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetKeystrokesInt32DateTimeDateTime">
            <summary>Sets the stub of IChartService.GetKeystrokes(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetLogTopAppsInt32Int32StringDateTimeDateTime">
            <summary>Sets the stub of IChartService.GetLogTopApps(Int32 userID, Int32 appID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetLogTopWindowsInt32StringIEnumerableOfDateTime">
            <summary>Sets the stub of IChartService.GetLogTopWindows(Int32 userID, String appName, IEnumerable`1&lt;DateTime&gt; dates)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetMostUsedAppsInt32DateTimeDateTime">
            <summary>Sets the stub of IChartService.GetMostUsedApps(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetScreenshotsByAppInt32StringDateTimeDateTime">
            <summary>Sets the stub of IChartService.GetScreenshotsByApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetScreenshotsInt32DateTimeDateTime">
            <summary>Sets the stub of IChartService.GetScreenshots(Int32 userID, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetSingleMostUsedAppInt32StringDateTimeDateTime">
            <summary>Sets the stub of IChartService.GetSingleMostUsedApp(Int32 userID, String appName, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIChartService.GetUsageSeriesStringDateTimeDateTime">
            <summary>Sets the stub of IChartService.GetUsageSeries(String username, DateTime dateFrom, DateTime dateTo)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIChartService.global::System#IDisposable#Dispose">
            <summary>Sets the stub of IDisposable.Dispose()</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService">
            <summary>Stub type of AppsTracker.DAL.Service.ISqlSettingsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService.#ctor">
            <summary>Initializes a new instance of type StubISqlSettingsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService.atdal::AppsTracker#DAL#Service#ISqlSettingsService#SaveChanges(AppsTracker.Models.EntityModels.Setting)">
            <summary>Sets the stub of ISqlSettingsService.SaveChanges(Setting settings)</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService.atdal::AppsTracker#DAL#Service#ISqlSettingsService#SaveChangesAsync(AppsTracker.Models.EntityModels.Setting)">
            <summary>Sets the stub of ISqlSettingsService.SaveChangesAsync(Setting settings)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService.SaveChangesAsyncSetting">
            <summary>Sets the stub of ISqlSettingsService.SaveChangesAsync(Setting settings)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService.SaveChangesSetting">
            <summary>Sets the stub of ISqlSettingsService.SaveChanges(Setting settings)</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService.SettingsGet">
            <summary>Sets the stub of ISqlSettingsService.get_Settings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubISqlSettingsService.atdal::AppsTracker#DAL#Service#ISqlSettingsService#Settings">
            <summary>Sets the stub of ISqlSettingsService.get_Settings()</summary>
        </member>
        <member name="T:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService">
            <summary>Stub type of AppsTracker.DAL.Service.IXmlSettingsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.#ctor">
            <summary>Initializes a new instance of type StubIXmlSettingsService</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.atdal::AppsTracker#DAL#Service#IXmlSettingsService#Initialize">
            <summary>Sets the stub of IXmlSettingsService.Initialize()</summary>
        </member>
        <member name="M:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.atdal::AppsTracker#DAL#Service#IXmlSettingsService#ShutDown">
            <summary>Sets the stub of IXmlSettingsService.ShutDown()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.DaysViewSettingsGet">
            <summary>Sets the stub of IXmlSettingsService.get_DaysViewSettings()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.Initialize">
            <summary>Sets the stub of IXmlSettingsService.Initialize()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.KeylogsViewSettingsGet">
            <summary>Sets the stub of IXmlSettingsService.get_KeylogsViewSettings()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.LogsViewSettingsGet">
            <summary>Sets the stub of IXmlSettingsService.get_LogsViewSettings()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.ScreenshotsViewSettingsGet">
            <summary>Sets the stub of IXmlSettingsService.get_ScreenshotsViewSettings()</summary>
        </member>
        <member name="F:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.ShutDown">
            <summary>Sets the stub of IXmlSettingsService.ShutDown()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.atdal::AppsTracker#DAL#Service#IXmlSettingsService#DaysViewSettings">
            <summary>Sets the stub of IXmlSettingsService.get_DaysViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.atdal::AppsTracker#DAL#Service#IXmlSettingsService#KeylogsViewSettings">
            <summary>Sets the stub of IXmlSettingsService.get_KeylogsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.atdal::AppsTracker#DAL#Service#IXmlSettingsService#LogsViewSettings">
            <summary>Sets the stub of IXmlSettingsService.get_LogsViewSettings()</summary>
        </member>
        <member name="P:AppsTracker.DAL.Service.Fakes.StubIXmlSettingsService.atdal::AppsTracker#DAL#Service#IXmlSettingsService#ScreenshotsViewSettings">
            <summary>Sets the stub of IXmlSettingsService.get_ScreenshotsViewSettings()</summary>
        </member>
    </members>
</doc>
