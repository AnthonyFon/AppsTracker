<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:AppsTracker.Widgets;assembly=AppsTracker.Presentation"
                    xmlns:local="clr-namespace:AppsTracker;assembly=AppsTracker.Presentation"
                    xmlns:chart="clr-namespace:De.TorstenMandelkow.MetroChart;assembly=De.TorstenMandelkow.MetroChart">

    <local:ConvertHeaderVisibility x:Key="convertHeaderVisibility" />
    <local:ConvertLabelVisibility    x:Key="convertLabelVisibility" />
    <local:ConvertDoubleToPercentage x:Key="convertDoubleToPercentage" />
    <local:ConvertValueToAlignment x:Key="convertValueToAlignment" />
    <local:ConvertScreenshotSize x:Key="convertScreenshotSize" />

    <Color x:Key="WindowBorderColor">#FF1E90FF</Color>
    <Color x:Key="LightAccentColor">#454545</Color>
    <Color x:Key="2ndBackgroundColor">#2E2E2E</Color>
    <SolidColorBrush x:Key="WindowBorderBrush"
                     Color="DodgerBlue" />
    <SolidColorBrush x:Key="ChildWindowBorderBrush"
                     Color="Purple" />
    <SolidColorBrush x:Key="LightAccent"
                     Color="#454545" />
    <SolidColorBrush x:Key="DarkAccent"
                     Color="#383838" />
    <SolidColorBrush x:Key="ItemText"
                     Color="#d1d1d1" />


    <SolidColorBrush x:Key="ButtonBackground"
                     Color="#333333" />
    <SolidColorBrush x:Key="ButtonBackgroundHover"
                     Color="#3e3e42" />
    <SolidColorBrush x:Key="ButtonBackgroundPressed"
                     Color="{DynamicResource LightAccentColor}" />
    <SolidColorBrush x:Key="ButtonBorder"
                     Color="#333333" />
    <SolidColorBrush x:Key="ButtonBorderHover"
                     Color="#3e3e42" />
    <SolidColorBrush x:Key="ButtonBorderPressed"
                     Color="{DynamicResource LightAccentColor}" />
    <SolidColorBrush x:Key="ButtonText"
                     Color="#d1d1d1" />
    <SolidColorBrush x:Key="ButtonTextHover"
                     Color="#d1d1d1" />
    <SolidColorBrush x:Key="ButtonTextPressed"
                     Color="#d1d1d1" />
    <SolidColorBrush x:Key="ButtonTextDisabled"
                     Color="#515151" />


    <Color x:Key="WindowBackgroundColor">#242424</Color>
    <SolidColorBrush x:Key="WindowBackgroundBrush"
                     Color="{StaticResource WindowBackgroundColor}" />
    <!--<LinearGradientBrush x:Key="WindowBackgroundBrush"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0"
                         SpreadMethod="Reflect">
        <GradientStop Color="#242424"
                      Offset="1" />
        <GradientStop Color="#FF2C2C2C"
                      Offset="1" />
    </LinearGradientBrush>-->
    <SolidColorBrush x:Key="2ndBackgroundBrush"
                     Color="#2E2E2E" />
    <SolidColorBrush x:Key="ChildWindowBackgroungBrush"
                     Color="#1F1F1F" />

    <!--SolidColorBrush x:Key="2ndBackgroundBrush"
                     Color="#FF303030" /-->
    <SolidColorBrush x:Key="WindowForegroundBrush"
                     Color="Gray" />
    <SolidColorBrush x:Key="LabelBrush"
                     Color="LightGray" />
    <SolidColorBrush x:Key="HighlightBrush"
                     Color="White" />
    <SolidColorBrush x:Key="BackgroundBrush"
                     Color="#FF1B1B1B" />

    <FontFamily x:Key="DefaultFontFamily">SegoeUI</FontFamily>

    <Style TargetType="{x:Type Button}">

        <Setter Property="Background"
                Value="{DynamicResource 2ndBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource 2ndBackgroundBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="10,2,10,2" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="true"
                            TextBlock.Foreground="{DynamicResource LabelBrush}">
                        <ContentPresenter Name="Presenter"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          TextBlock.Foreground="{DynamicResource LabelBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource ButtonTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource LightAccent}" />

                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource LightAccent}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource HighlightBrush}" />
                        </Trigger>

                        <!--Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="{DynamicResource WindowBorderBrush}" />

                            <Setter Property="Foreground"
                                    Value="{DynamicResource LightAccent}" />
                        </Trigger-->

                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter TargetName="Chrome"
                                    Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="17"
                                    Height="17"
                                    CornerRadius="0"
                                    Background="{DynamicResource 2ndBackgroundBrush}"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource 2ndBackgroundBrush}">
                                <Path Width="9"
                                      Height="9"
                                      Margin="2"
                                      Stretch="Fill"
                                      x:Name="CheckMark"
                                      SnapsToDevicePixels="False"
                                      Stroke="{DynamicResource LabelBrush}"
                                      Data="F1 M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z " />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentControl Margin="4,0,0,0"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Left" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="false">
                            <Setter TargetName="CheckMark"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource 2ndBackgroundBrush}" />
                        </Trigger>

                        <!--Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter TargetName="CheckMark"
                                    Property="Data"
                                    Value="M 0 7 L 7 0" />
                        </Trigger-->

                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource LightAccent}" />
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource LightAccent}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource 2ndBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource 2ndBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">

                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource WindowBorderBrush}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Foreground"
                Value="{DynamicResource HighlightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Template="{DynamicResource toggleButtonTemplate}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"
                                      Foreground="{DynamicResource HighlightBrush}">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,13,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{DynamicResource ComboBoxTextBox}"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center"
                                 Margin="3,3,13,3"
                                 Focusable="True"
                                 Background="{DynamicResource 2ndBackgroundBrush}"
                                 Foreground="{DynamicResource HighlightBrush}"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource 2ndBackgroundBrush}"
                                        BorderThickness="1"
                                        CornerRadius="0"
                                        BorderBrush="{DynamicResource 2ndBackgroundBrush}" />
                                <ScrollViewer Margin="4,6,4,6"
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource DarkAccent}" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                                 Property="Popup.AllowsTransparency"
                                 Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="0" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop"
                                    Value="false" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style   TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true"
                            Background="Transparent">
                        <Label Name="Content"
                               Content="{TemplateBinding Content}"
                               Style="{DynamicResource SelectableLabelStyle}"
                               Margin="0" />
                    </Border>

                    <!--ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="Content"
                                    Value="{DynamicResource WindowBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers-->

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <ControlTemplate TargetType="ToggleButton"
                     x:Key="toggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="1"
                    Background="{DynamicResource 2ndBackgroundBrush}"
                    BorderBrush="{DynamicResource 2ndBackgroundBrush}"
                    BorderThickness="1"
                    TextBlock.Foreground="{DynamicResource HighlightBrush}" />

            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{DynamicResource LabelBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver"
                     Value="True">

                <!--Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource WindowBorderBrush}" /-->

                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="{DynamicResource LightAccent}" />
                <Setter TargetName="Border"
                        Property="Background"
                        Value="{DynamicResource LightAccent}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsFocused"
                     Value="True">
                <Setter TargetName="Arrow"
                        Property="Fill"
                        Value="{DynamicResource WindowBorderBrush}" />
                <Setter TargetName="Border"
                        Property="BorderBrush"
                        Value="{DynamicResource WindowBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="TextBox">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="Transparent" />
    </ControlTemplate>

    <Style x:Key="ThemeBorderStyle"
           TargetType="Border">
        <Setter Property="Background"
                Value="{DynamicResource 2ndBackgroundBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="10" />
    </Style>

    <Style x:Key="ListBoxItemStyle"
           TargetType="ListBoxItem">
        <Style.Resources>

            <!--SelectedItem with focus-->

            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="{DynamicResource 2ndBackgroundColor}" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                             Color="White" />

            <!--SelectedItem without focus-->

            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                             Color="{DynamicResource 2ndBackgroundColor}" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                             Color="{DynamicResource 2ndBackgroundColor}" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                             Color="White" />
        </Style.Resources>

    </Style>


    <Style x:Key="ListBoxItemStyleNoHL"
           TargetType="ListBoxItem">
        <Style.Resources>

            <!--SelectedItem with focus-->

            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                             Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                             Color="WhiteSmoke" />

            <!--SelectedItem without focus-->

            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                             Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                             Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}"
                             Color="WhiteSmoke" />
        </Style.Resources>
        <Setter Property="IsSelected"
                Value="{Binding IsSelected}" />
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="AllowDrop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBoxBase">
                    <Grid>
                        <Border Name="Border"
                                CornerRadius="1"
                                Background="{DynamicResource 2ndBackgroundBrush}"
                                BorderBrush="{DynamicResource 2ndBackgroundBrush}"
                                BorderThickness="1"
                                Margin="0">

                        </Border>
                        <ScrollViewer                                       Margin="2,3,0,0"
                                                                            x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource LightAccent}"
                                    TargetName="Border" />
                            <Setter  TargetName="Border"
                                     Property="Background"
                                     Value="{DynamicResource LightAccent}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}"
                                    TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style   TargetType="PasswordBox">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="MinHeight"
                Value="25" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="PasswordChar"
                Value="●" />
        <Setter Property="AllowDrop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid>
                        <Border Name="Border"
                                CornerRadius="1"
                                Background="{DynamicResource 2ndBackgroundBrush}"
                                BorderBrush="{DynamicResource 2ndBackgroundBrush}"
                                BorderThickness="1">

                        </Border>
                        <ScrollViewer x:Name="PART_ContentHost"
                                      VerticalAlignment="Center"
                                      Margin="2,0,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource LightAccent}"
                                    TargetName="Border" />
                            <Setter  TargetName="Border"
                                     Property="Background"
                                     Value="{DynamicResource LightAccent}" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource WindowBorderBrush}"
                                    TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style  TargetType="{x:Type ContextMenu}">
        <Setter Property="FontFamily"
                Value="{DynamicResource DefaultFontFamily}" />
        <Setter Property="FontSize"
                Value="{DynamicResource DefaultFontSize}" />
        <Setter Property="TextOptions.TextFormattingMode"
                Value="Display" />
        <Setter Property="Background"
                Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource WindowBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="0,6,0,6" />
        <Setter Property="MinWidth"
                Value="150" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="true" />

        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid Margin="4">
                        <Border Background="#0C000000"
                                BorderBrush="#0F000000"
                                BorderThickness="1"
                                CornerRadius="2.5"
                                Margin="-1" />
                        <Border Background="#0A000000"
                                BorderBrush="#0C000000"
                                BorderThickness="1"
                                CornerRadius="2.75"
                                Margin="-2" />

                        <Border x:Name="ContextMenuBorder"
                                Background="{DynamicResource 2ndBackgroundBrush}"
                                BorderBrush="{DynamicResource WindowBorderBrush}"
                                BorderThickness="1"
                                Margin="0,-1,0,0">
                            <ScrollViewer Name="ContextMenuScrollViewer"
                                          VerticalScrollBarVisibility="Auto">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas Height="0"
                                            Width="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                        <Rectangle Name="OpaqueRect"
                                                   Height="{Binding ElementName=ContextMenuBorder,Path=ActualHeight}"
                                                   Width="{Binding ElementName=ContextMenuBorder,Path=ActualWidth}"
                                                   Fill="{Binding ElementName=ContextMenuBorder,Path=Background}" />
                                    </Canvas>
                                    <ItemsPresenter Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="Checkmark">M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z</Geometry>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"
           TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid SnapsToDevicePixels="true"
                          Margin="8,4,8,4">
                        <Rectangle Height="1"
                                   Margin="0"
                                   Fill="{DynamicResource LabelBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="10"
                          Height="10"
                          Stretch="Fill"
                          Fill="{DynamicResource LabelBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="0,2,8,2"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="0,2" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource LightAccent}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource ItemTextDisabled}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource ItemTextDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border x:Name="GlyphPanel"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="10"
                          Height="10"
                          Stretch="Fill"
                          Fill="{DynamicResource LabelBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}" />
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="0,2,8,2"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Path x:Name="RightArrow"
                      Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}" />
            </Grid>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid Margin="4"
                      Background="{DynamicResource PopupBackground}">
                    <Grid x:Name="Shdw">
                        <Border Background="#0C000000"
                                BorderBrush="#0F000000"
                                BorderThickness="1"
                                CornerRadius="2.5"
                                Margin="-1" />
                        <Border Background="#0A000000"
                                BorderBrush="#0C000000"
                                BorderThickness="1"
                                CornerRadius="2.75"
                                Margin="-2" />
                    </Grid>
                    <Border x:Name="SubMenuBorder"
                            Background="{DynamicResource BackgroundBrush}"
                            BorderBrush="{DynamicResource WindowBorderBrush}"
                            BorderThickness="1"
                            Margin="0,-1,0,0">
                        <ScrollViewer Name="SubMenuScrollViewer"
                                      CanContentScroll="true"
                                      Foreground="{DynamicResource LabelBrush}"
                                      VerticalScrollBarVisibility="Auto">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter Name="ItemsPresenter"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Grid.IsSharedSizeScope="true" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="true">
                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource LightAccent}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource HighlightBrush}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource HighlightBrush}" />
                <Setter TargetName="RightArrow"
                        Property="Fill"
                        Value="{DynamicResource HighlightBrush}" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible" />
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed" />
            </Trigger>
            <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                <Setter TargetName="Shdw"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource DarkAccent}" />
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource DarkAccent}" />
                <Setter TargetName="RightArrow"
                        Property="Fill"
                        Value="{DynamicResource DarkAccent}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{DynamicResource LabelBrush}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}" />
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,2" />
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,2" />
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="2,3,2,3" />
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>